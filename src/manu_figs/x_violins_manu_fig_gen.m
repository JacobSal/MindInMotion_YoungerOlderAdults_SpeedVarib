%   Project Title: MIM YOUNGER AND OLDER ADULTS KINEMATICS-EEG ANALYSIS
%
%   Code Designer: Jacob salminen
%## SBATCH (SLURM KICKOFF SCRIPT)
% sbatch /blue/dferris/jsalminen/GitHub/par_EEGProcessing/src/2_STUDY/mim_yaoa_speed_kin/.sh

%{
%## RESTORE MATLAB
% WARNING: restores default pathing to matlab 
restoredefaultpath;
clc;
close all;
clearvars
%}
%% SET WORKSPACE ======================================================= %%
% opengl('dsave', 'software') % might be needed to plot dipole plots?
%## TIME
tic
ADD_ALL_SUBMODS = false;
%## Determine Working Directories
if ~ispc
    try
        SCRIPT_DIR = matlab.desktop.editor.getActiveFilename;
        SCRIPT_DIR = fileparts(SCRIPT_DIR);
        SRC_DIR = fileparts(SCRIPT_DIR); % change this if in sub folder
    catch e
        fprintf('ERROR. PWD_DIR couldn''t be set...\n%s',getReport(e))
        SCRIPT_DIR = getenv('SCRIPT_DIR');
        SRC_DIR = getenv('SRC_DIR');
    end
else
    try
        SCRIPT_DIR = matlab.desktop.editor.getActiveFilename;
        SCRIPT_DIR = fileparts(SCRIPT_DIR);
    catch e
        fprintf('ERROR. PWD_DIR couldn''t be set...\n%s',getReport(e))
        SCRIPT_DIR = dir(['.' filesep]);
        SCRIPT_DIR = SCRIPT_DIR(1).folder;
    end
    SRC_DIR = fileparts(SCRIPT_DIR); % change this if in sub folder
end
%## Add Study, Src, & Script Paths
addpath(SCRIPT_DIR)
addpath(SRC_DIR);
cd(SRC_DIR);
fprintf(1,'Current folder: %s\n',SRC_DIR);
%## Set PWD_DIR, EEGLAB path, _functions path, and others...
set_workspace
%% (DATASET INFORMATION) =============================================== %%
% [SUBJ_PICS,GROUP_NAMES,SUBJ_ITERS,~,~,~,~] = mim_dataset_information('yaoa_spca');
[SUBJ_PICS,GROUP_NAMES,SUBJ_ITERS,~,~,~,~] = mim_dataset_information('yaoa_spca_speed');
%% (PATHS) ============================================================= %%
%- datset name
DATA_SET = 'MIM_dataset';
%- study name
% STUDY_DNAME = '10172024_MIM_YAOAN89_antsnorm_dipfix_iccREMG0p4_powpow0p3_skull0p01_15mmrej_speed';
% STUDY_DNAME =  '01192025_mim_yaoa_nopowpow_crit_speed';
STUDY_DNAME = '02202025_mim_yaoa_powpow0p3_crit_speed';
STUDY_FNAME = 'kin_eeg_epoch_study';
ANALYSIS_DNAME = 'kin_eeg_step_to_step';
studies_fpath = [PATHS.data_dir filesep DATA_SET filesep '_studies'];

%## CLUSTER LOADING
CLUSTER_K = 11;
CLUSTER_STUDY_NAME = 'temp_study_rejics5';
% cluster_fpath = [studies_fpath filesep sprintf('%s',STUDY_DNAME) filesep '__iclabel_cluster_kmeansalt_rb10'];
% cluster_fpath = [studies_fpath filesep sprintf('%s',STUDY_DNAME) filesep '__iclabel_cluster_kmeansalt_rb3'];
cluster_fpath = [studies_fpath filesep sprintf('%s',STUDY_DNAME) filesep '__iclabel_cluster_allcond_rb3'];
cluster_study_fpath = [cluster_fpath filesep 'icrej_5'];
cluster_k_dir = [cluster_study_fpath filesep sprintf('%i',CLUSTER_K)];
%## R-STATS LOADING
r_stats_dir = [PATHS.src_dir filesep 'r_scripts' filesep 'sbs_lme_mods'];
%-
save_dir = [cluster_k_dir filesep ANALYSIS_DNAME];
if ~exist(save_dir,'dir')
    mkdir(save_dir);
end
%% ===================================================================== %%
% if ~ispc
%     [STUDY,ALLEEG] = pop_loadstudy('filename',[STUDY_FNAME '_UNIX.study'],'filepath',save_dir);
% else
%     [STUDY,ALLEEG] = pop_loadstudy('filename',[STUDY_FNAME '.study'],'filepath',save_dir);
% end
%## LOAD CLUSTER STUDY
if ~ispc
    tmp = load('-mat',[cluster_study_fpath filesep sprintf('%s_UNIX.study',CLUSTER_STUDY_NAME)]);
    CL_STUDY = tmp.STUDY;
else
    tmp = load('-mat',[cluster_study_fpath filesep sprintf('%s.study',CLUSTER_STUDY_NAME)]);
    CL_STUDY = tmp.STUDY;
end

%## LOAD STUDY
if ~ispc
    tmp = load('-mat',[studies_fpath filesep sprintf('%s',STUDY_DNAME) filesep sprintf('%s_UNIX.study',STUDY_FNAME)]);
    STUDY = tmp.STUDY;
else
    tmp = load('-mat',[studies_fpath filesep sprintf('%s',STUDY_DNAME) filesep sprintf('%s.study',STUDY_FNAME)]);
    STUDY = tmp.STUDY;
end
%-
cl_struct = par_load(cluster_k_dir,sprintf('cl_inf_%i.mat',CLUSTER_K));
STUDY.cluster = cl_struct;
[comps_out,main_cl_inds,outlier_cl_inds] = eeglab_get_cluster_comps(STUDY);
CLUSTER_PICS = main_cl_inds;

%% (LOAD STATISTICS & DATA EXCEL SHEET FROM R) ========================= %%
%## FNAMES
%-- r stats
fextr = 'allcond_perstridefb_mi_nfslidingb36_rerun';
%## IMPORT DATA
% KIN_TABLE = par_load(save_dir,sprintf('sbs_eeg_psd_kin_allcond_perstridefb_apfix_std_mi_nfslidingb36.mat',fextr));
% %-- r-stats
% RSTATS_IMPORT = readtable([r_stats_dir filesep sprintf('03122025_lme_eeg_kin_%s_stats.xlsx',fextr)], ...
%     "FileType","spreadsheet","UseExcel",true);

%## IMPORT MEANSD DATA
KIN_TABLE = readtable([r_stats_dir filesep sprintf('03312025_lme_eeg_kin_meansd_%s_tbl.xlsx',fextr)], ...
    "FileType","spreadsheet","UseExcel",true);
%-- r-stats
RSTATS_IMPORT = readtable([r_stats_dir filesep sprintf('03312025_lme_eeg_kin_meansd_%s_stats.xlsx',fextr)], ...
    "FileType","spreadsheet","UseExcel",true);
%% MEASURES TO ANALYZE ================================================= %%
%## STATS
try
    STUDY.etc = rmfield(STUDY.etc,'statistics');
end
STUDY = pop_statparams(STUDY,...
    'groupstats','off',...
    'condstats','on',...
    'method','perm',...
    'singletrials','off',...
    'mode','fieldtrip',...
    'fieldtripalpha',NaN,...
    'fieldtripmethod','montecarlo',...
    'fieldtripmcorrect','fdr',...
    'fieldtripnaccu',4000);
stats = STUDY.etc.statistics;
stats.paired{1} = 'on'; % Condition stats
stats.paired{2} = 'off'; % Group stats

%## CLUSTER INFO
%-- 01192025_mim_yaoa_nopowpow_crit_speed (rb3)
cluster_titles = {'Right Posterior Parietal', ...
    'Right Sensorimotor', ...
    'Left Precuneus', ... %'Anterior Cingulate', ...
    'Left Sensorimotor', ...
    'Right Premotor',...
    'Left Posterior Parietal', ...
    'Left Supplementary Motor', ...
    'Right Occipital', ...
    'Mid Cingulate',...
    'Left Temporal',...
    'Left Occipital'};
out = cellfun(@(x) regexp(x,'(.).*\s(...)','tokens'),cluster_titles);
output_titles = cellfun(@(x) strjoin(x,''),out,'UniformOutput',false);
fig_n = 1:length(cluster_titles);
%##
speed_xvals = (0:5)*0.25;
g_chars = {'H1000','H2000','H3000'};
c_chars = {'0.25 m/s','0.50 m/s','0.75 m/s','1.0 m/s'};
g_chars_topo = {'Young Adults','Older High Func. Adults','Older Low Func. Adults'};
g_chars_subp = {'YA','OHFA','OLFA'};
% dip_dir = [cluster_k_dir filesep 'topo_dip_inf' filesep 'all'];
dip_dir = [cluster_k_dir filesep 'topo_dip_inf' filesep 'valid_clusts'];
cmaps_speed = linspecer(4*3);
cmaps_speed = [cmaps_speed(1,:);cmaps_speed(2,:);cmaps_speed(3,:);cmaps_speed(4,:)];
%## EXTRACT PSD DATA
spcolor_dark = cmaps_speed; %color.speed;
xtick_label_g = {'0.25','0.50','0.75','1.0'};
x_label = 'speed (m/s)';
cond_offsets = [-0.35,-0.1,0.15,0.40];
%% ===================================================================== %%
%## PARAMETERS
%-
designs = unique(KIN_TABLE.model_n);
group_chars = unique(KIN_TABLE.group_char);
cond_chars = unique(KIN_TABLE.cond_char);
clusters = unique(RSTATS_IMPORT.cluster_num);
clusters = clusters(clusters~=0);
%--
SAVE_RES = 300;

%## 
AXES_DEFAULT_PROPS = {'box','off', ...
    'xtick',[], ...
    'ytick',[],...
    'ztick',[], ...
    'xcolor',[1,1,1], ...
    'ycolor',[1,1,1]};

%## VIOLIN PLOTS
label_struct = struct('Units','normalized',...
    'FontName','Arial', ...
    'FontSize',8, ...
    'FontWeight','bold');
group_anno_struct = struct(...
    'FontName','Arial', ...
    'FontSize',8, ...
    'FontWeight','normal', ...
    'HorizontalAlignment','center',...
    'Units','data');
ax_struct = struct('box','off', ...
    'LineWidth',1, ...
    'FontWeight','normal', ...
    'FontName','Arial', ...
    'FontSize',12, ...
    'OuterPosition',[0 0 1 1], ...
    'Position',[0.3,0.3,0.5,0.5]);
title_props_struct = struct('Units','normalized',...
    'FontName','Arial', ...
    'FontSize',8, ...
    'FontWeight','bold');
stats_char_struct = struct('FontSize',9,...
    'FontName','Arial',...
    'FontWeight','bold', ...
    'Units','normalized');
reg_line_struct = struct('LineStyle','-', ...
    'Color','k', ...
    'LineWidth',2);
DEF_VPLOT_STRUCT = struct('color_map',linspecer(10),...
    'cond_labels',{{'0.25','0.50','0.75','1.0'}},...
    'cond_offsets',[-0.35,-0.1,0.15,0.40],...
    'do_group_labels',true, ... % group props
    'do_combine_groups',false,...
    'group_labels',{{'YA','OHFA','OLFA'}},...
    'group_offsets',[0.125,0.475,0.812],...
    'group_label_offset',[0,-0.285],...
    'group_label_props',group_anno_struct, ...
    'y_label',{{''}},... % y-label props
    'ytick',[], ... 
    'ytick_labs',{{''}}, ...
    'y_label_props',label_struct, ...
    'y_label_offset',[0,0], ...
    'ylim',[],...
    'x_label',{{'Speed (m/s)'}},... % x-label props
    'x_label_props',label_struct, ...
    'x_label_offset',[0,-0.1],...
    'xlim',[],...
    'xtick',[], ...
    'xtick_labs',{{''}}, ...
    'xtick_angle',75,...
    'title',{{''}},... % title props
    'title_props',title_props_struct, ...
    'ax_props',ax_struct, ... % ax props
    'stats_char_props',stats_char_struct, ... % stats & scatter props
    'reg_line_props',reg_line_struct, ...
    'scatter_props',struct(...
        'SizeData',4, ...
        'Marker','*', ...
        'CData',[0,0,0], ...
        'jitter','on', ...
        'jitterAmount', 0.05));
VIO_STRUCT = struct('Width',0.15,...
    'ShowWhiskers',false,...
    'ShowNotches',false,...
    'ShowBox',true,...
    'ShowMedian',true,...
    'Bandwidth',0.1,...
    'QuartileStyle','shadow',...
    'HalfViolin','full',...
    'DataStyle','scatter',...
    'MarkerSize',8,...
    'EdgeColor',[0.5,0.5,0.5],...
    'ViolinAlpha',{{0.3,0.4}},...
    'do_plot_outlier_marks',true,...
    'use_raw_bandwidth',false);
BRACKET_STRUCT = struct('sig_sign','+',...
    'line_specs',{{'LineStyle','-','LineWidth',2,'Color','k'}},...
    'text_specs',{{'FontSize',8,'FontName','Arial','FontWeight','bold'}},...
    'bracket_conn',[],...
    'conn_offset_y_upper',[],...
    'bracket_offset_y_upper',0,...
    'bracket_offset_y_lower',0,...
    'sig_offset_x',0,...
    'sig_offset_y',[]);
SIGLINE_STRUCT = struct('sig_sign','*',...
    'line_specs',{{'LineStyle','-','LineWidth',2,'Color','k'}},...
    'text_specs',{{'FontSize',8,'FontName','Arial','FontWeight','bold'}},...
    'conn_y',[],...
    'conn_offset_y',[],...
    'sig_offset_x',0,...
    'sig_offset_y',0);

%## MODELS
COEFF_CHARS_INT = {'(Intercept)','speed_cond_num','group_char1','group_char2', ...
    'speed_cond_num:group_char1','speed_cond_num:group_char2'};
ANV_CHARS_INT = {'(Intercept)','speed_cond_num','group_char','speed_cond_num:group_char'};
ANV_CHARS_GROUP = {'(Intercept)','speed_cond_num','group_char'};
COEFF_CHARS_GROUP = {'(Intercept)','speed_cond_num','group_char1','group_char2'};
%--
%--
% VIOT_YLIM = [1.4,3.2];
% VIOT_YTICKS = [1.5,2.0,2.5,3];
% VIOT_YTICK_LABS = string(VIOT_YTICKS);
% %--
% VIOA_YLIM = [1.4,3.2];
% VIOA_YTICKS = [1.5,2.0,2.5,3];
% VIOA_YTICK_LABS = string(VIOA_YTICKS);
% %--
% VIOB_YLIM = [1.4,2];
% VIOB_YTICKS = [1.4,1.6,1.8,2];
% VIOB_YTICK_LABS = string(VIOB_YTICKS);
%--
VIOSD_YLIM = [0.25,0.5];
VIOSD_YTICKS = [0.3,0.4,0.5];
VIOSD_YTICK_LABS = string(VIOSD_YTICKS);
%--
VIOMU_YLIM = [-1,5];
VIOMU_YTICKS = [-1,1,3,5];
VIOMU_YTICK_LABS = string(VIOMU_YTICKS);
%--
VIOCOV_YLIM = [1.25,3];
VIOCOV_YTICKS = [1.5,2,2.5,3];
VIOCOV_YTICK_LABS = string(VIOCOV_YTICKS);
%--
FG_TXT_SZ = 1;
FG_SHIFT_Y = -0.26;
FG_SHIFT_X = 0.5;
FG_INIT_X = 0;
FG_INIT_Y = -0.065;
FX_DIM = 2;

meas_ext = 'covistdmu';
tmp_savedir = [save_dir filesep fextr '_violin_figs'];
mkdir(tmp_savedir);
%##
FIG_PROPS = {'Units','inches', ...
        'Position',[1,1,6.5,9], ...
        'PaperUnits','inches', ...
        'PaperSize',[1 1], ...
        'PaperPosition',[0 0 1 1]};
ANN_PROPS = {'HorizontalAlignment','center',...
        'VerticalAlignment','middle', ...
        'LineStyle','none', ...
        'FontName','Arial',...
        'FontSize',14, ...
        'FontWeight','Bold', ...
        'Units','normalized'};
SIG_K_PROPS = {'HorizontalAlignment','left',...
        'VerticalAlignment','top', ...
        'LineStyle','none', ...
        'FontName','Arial',...
        'FontSize',10, ...
        'FontWeight','normal', ...
        'Units','normalized'};
%% (ALL METRICS PLOT) ================================================== %%
des_i = 2;
cluster_inds_plot = [3,4,6,8];
for cl_i = 1:length(cluster_inds_plot)
    %## INITIATE FIGURE
    %-- initiate params
    fy_shift = FG_INIT_Y;
    fx_shift = FG_INIT_X;
    fx_cnt = 1;
    fy_cnt = 1;
    cl_ii = find(cluster_inds_plot(cl_i) == double(string(clusters)));
    cl_n = double(string(clusters(cl_ii)));
    atlas_name = cluster_titles{cl_ii};
    
    %## INITIATE FIGURE
    %-- title
    TITLE_XSHIFT = 0.4;
    TITLE_YSHIFT = 0.955; %+fy_shift;
    TITLE_BOX_SZ = [0.4,0.1];
    %-- fig
    fig = figure('color','white');
    xx = TITLE_XSHIFT-(TITLE_BOX_SZ(1)/2/2);
    yy = TITLE_YSHIFT-(TITLE_BOX_SZ(2)/2);
    annotation('textbox',[xx,yy,TITLE_BOX_SZ],...
        'String',atlas_name, ...
        'HorizontalAlignment','center',...
        'VerticalAlignment','middle', ...
        'LineStyle','none', ...
        'FontName','Arial',...
        'FontSize',16, ...
        'FontWeight','Bold', ...
        'Units','normalized');
    set(fig,FIG_PROPS{:})
    p_sz = get(fig,'Position');
    set(gca,AXES_DEFAULT_PROPS{:});
    hold on;

    %## VIOLIN PLOTS) ================================================== %%    
    % EEG_MEASURES = { ...
    %     'std_avg_theta_fn1', ...
    %     'mu_avg_theta_fn1', ...
    %     'cov_i_avg_theta_fn1', ...
    %     'std_avg_alpha_fn1', ...
    %     'mu_avg_alpha_fn1', ...
    %     'cov_i_avg_alpha_fn1', ...
    %     'std_avg_beta_fn1', ...
    %     'mu_avg_beta_fn1', ...
    %     'cov_i_avg_beta_fn1'};
    % EEG_MEASURE_LABS = {'<log(SD(PSD_{Ns}))>', ...
    %     '<<log(\theta_{Ns})>>', ...
    %     'log(\sigma_{PSD}/\mu_{PSD})', ...
    %     '<log(SD(PSD_{Ns}))>', ...
    %     '<<log(\theta_{Ns})>>', ...
    %     'log(\sigma_{PSD}/\mu_{PSD})', ...
    %     '<log(SD(PSD_{Ns}))>', ...
    %     '<<log(\theta_{Ns})>>', ...
    %     'log(\sigma_{PSD}/\mu_{PSD})'};
    % EEG_MEASURE_TITLES = {'SD \theta_{Ns}', ...
    %     'Mean \theta_{Ns}', ...
    %     'COV \theta_{Ns}', ...
    %     'SD \alpha_{Ns}', ...
    %     'Mean \alpha_{Ns}', ...
    %     'COV \alpha_{Ns}', ...
    %     'SD \beta_{Ns}', ...
    %     'Mean \beta_{Ns}', ...
    %     'COV \beta_{Ns}'};
    EEG_MEASURES = { ...
        'std_avg_theta_fn1', ...
        'mu_avg_theta_fn1', ...
        'std_avg_beta_fn1', ...
        'mu_avg_beta_fn1'};
    EEG_MEASURE_LABS = {'SD(PSD_{Ns})', ...
        '<log(PSD_{Ns})>', ...
        'log(SD(PSD_{Ns}))', ...
        '<log(PSD_{Ns})>'};
    EEG_MEASURE_TITLES = {'SD \theta_{Ns}', ...
        'Mean \theta_{Ns}', ...
        'SD \beta_{Ns}', ...
        'Mean \beta_{Ns}'};
    PANEL_LETTER = {'A','B','C'};
    ANN_PROPS = {'HorizontalAlignment','left',...
                'VerticalAlignment','top', ...
                'LineStyle','none', ...
                'FontName','Arial',...
                'FontSize',12*FG_TXT_SZ, ...
                'FontWeight','Bold', ...
                'Units','normalized'};
    % VIOLIN PLOTS) ================================================== %%    
    %--
    FG_FIX = [1,1];
    FG_ANN_FIX = [1,1];
    FG_FIX_SHIFT = [1,1];
    VIO_FG_RESIZE = 1;
    %--
    IM_RESIZE = 0.7*VIO_FG_RESIZE;
    AX_SZ = [0.3,0.225];
    AX_SHIFT = [0,0]; %[0.15,-0.11];
    AX_SLIDE = [1.4,-1.6]; %[1.35,-1.35];
    %--
    FUDGE = -0.04;
    F = AX_SZ(1)*IM_RESIZE;
    xF = (AX_SZ(1)*IM_RESIZE*AX_SLIDE(1)-F);
    % AX_INIT_X = 0.5-(3/2)*F-xF+fx_shift;
    AX_INIT_X = 0.5-(1/2)*F-xF+FUDGE+fx_shift;
    AX_INIT_Y = 0.775+fy_shift;
    %--
    PRC_YLIM = [3,97];
    YLIM_FAC = 2;
    AX_H = 0.225;
    AX_SLIDE = AX_SLIDE.*FG_FIX_SHIFT;
    txs = AX_INIT_X+AX_SHIFT(1)*FG_FIX(1);
    tys = AX_INIT_Y+AX_SHIFT(2)*FG_FIX(2);
    X_DIM = 2;
    DES_I = 2;
    %--
    x_shift = txs;   
    y_shift = tys;
    y_lims = zeros(length(EEG_MEASURES),2);
    ax_s = cell(length(EEG_MEASURES),1);
    x_cnt = 1;
    y_cnt = 1;
    p_cnt = 1;

    %## LOOP MEASURES
    for e_i = 1:length(EEG_MEASURES)
        %##
        eeg_measure = EEG_MEASURES{e_i};

        %## SUB-SELECT DATA
        inds = strcmp(KIN_TABLE.model_n,num2str(des_i)) & ...
            KIN_TABLE.cluster_n == cl_n & ...
            ~isnan(KIN_TABLE.(eeg_measure)); %num2str(cl_n);
        tmp_tbl = KIN_TABLE(inds,:); 

        %## EXTRACT STATS INFO
        EXTRACT_STRUCT = struct( ...
            'group_chars', {{'H1000','H2000','H3000'}}, ...
            'group_order', categorical({'H1000','H2000','H3000'}), ...
            'model_char_int', 'speed_group_intact_all', ...
            'model_char_group', 'speed_group_all', ...
            'group_char', 'all', ...
            'anv_chars_int', {ANV_CHARS_INT}, ...
            'anv_chars_group', {ANV_CHARS_GROUP}, ...
            'coeff_chars_int', {COEFF_CHARS_INT}, ...
            'coeff_chars_group', {COEFF_CHARS_GROUP}, ...
            'eeg_measure', {EEG_MEASURES{e_i}}, ...
            'kin_measure', {'none'}, ...
            'coeff_study', {'speed'}, ...
            'do_display_str',true, ...
            'str_offset', [-0.1, 0], ...
            'str_font_size', 9*FG_TXT_SZ, ...
            'ci_bar_width', 0.15, ...
            'ci_bar_xpos', 0, ...
            'ci_bar_linespecs', {{'LineStyle','-','LineWidth',2,'Color','k'}}, ...
            'coeff_desm', [ ...                
                0, 1; ...                
               -1,-1; ...
                1, 0 ...
            ] ...
        );
        %--
        [tmp_stats_struct,tmp_confint_struct,ranef] = get_r_stats_func(RSTATS_IMPORT,cl_n, ...
            'EXTRACT_STRUCT',EXTRACT_STRUCT);

        %## NORMALIZE DATA USING SUBJECT INTERCEPTS
        if ~isempty(ranef.char)
            for s_i = 1:length(ranef.char)
                int = ranef.int(s_i);
                ind = strcmp(ranef.char{s_i},tmp_tbl.subj_char);
                tmp_tbl(ind,eeg_measure) = tmp_tbl(ind,eeg_measure)-int;
            end
        end
        %## PLOT
        ax = axes();
        %-- set parameter
        tmp_vio_struct = VIO_STRUCT;
        tmp_vio_struct.MarkerSize = 8*FG_TXT_SZ*0.8;
        tmp_vio_struct.vio_edge_alpha = 0.9;
        tmp_vio_struct.vio_edge_lw = 0.5*FG_TXT_SZ; 
        %--
        tmp_plot_struct = DEF_VPLOT_STRUCT;
        tmp_plot_struct.scatter_props.SizeData = 4*FG_TXT_SZ;
        tmp_plot_struct.title_props.FontSize = 10*FG_TXT_SZ;
        tmp_plot_struct.x_label_offset = [0,-0.15];
        tmp_plot_struct.x_label_props.FontSize = 10*FG_TXT_SZ;
        tmp_plot_struct.y_label_props.FontSize = 10*FG_TXT_SZ;
        tmp_plot_struct.group_label_props.FontSize = 10*FG_TXT_SZ;
        tmp_plot_struct.group_label_offset = [0,-0.265];
        tmp_plot_struct.ax_props = struct('box','off', ...
            'LineWidth',1, ...
            'FontWeight','normal', ...
            'FontName','Arial', ...
            'FontSize',9*FG_TXT_SZ, ...
            'OuterPosition',[0 0 1 1], ...
            'Position',[x_shift,y_shift,AX_SZ(1)*IM_RESIZE,AX_SZ(2)*IM_RESIZE]);
        tmp_plot_struct.group_labels = g_chars_subp; %params.group_chars; %g_chars_subp;
        tmp_plot_struct.color_map = spcolor_dark;
        tmp_plot_struct.title = EEG_MEASURE_TITLES(e_i);
        tmp_plot_struct.y_label = EEG_MEASURE_LABS{e_i};
        if y_cnt == 3
            tmp_plot_struct.x_label = 'Speed (m/s)';
        else
            tmp_plot_struct.x_label = '';
        end
        tmp_plot_struct.ylim = []; %prc_ylim;
        switch x_cnt
            case 1
                tmp_plot_struct.ylim = VIOSD_YLIM;
                tmp_plot_struct.ytick_labs = cellstr(VIOSD_YTICK_LABS);
                tmp_plot_struct.ytick = VIOSD_YTICKS;
            case 2
                tmp_plot_struct.ylim = VIOMU_YLIM;
                tmp_plot_struct.ytick_labs = cellstr(VIOMU_YTICK_LABS);
                tmp_plot_struct.ytick = VIOMU_YTICKS;
            case 3
                tmp_plot_struct.ylim = VIOCOV_YLIM;
                tmp_plot_struct.ytick_labs = cellstr(VIOCOV_YTICK_LABS);
                tmp_plot_struct.ytick = VIOCOV_YTICKS;
        end
        % tmp_plot_struct.ax_position = [x_shift,y_shift, ...
        %     AX_SZ(1)*IM_RESIZE,AX_SZ(2)*IM_RESIZE];
        %-- group violin plot
        ax = group_violin(tmp_tbl,eeg_measure,'speed_n','group_char',...
            ax,...
            'VIOLIN_STRUCT',tmp_vio_struct,...
            'PLOT_STRUCT',tmp_plot_struct,...
            'STATS_STRUCT',tmp_stats_struct,...
            'BRACKET_STRUCT',BRACKET_STRUCT,...
            'SIGLINE_STRUCT',SIGLINE_STRUCT, ...
            'CONFINT_STRUCT',tmp_confint_struct);

        %## LETTER PANEL
        if x_cnt == 1
            %--
            FG_ANN_FIX = [1,1];
            ANNO_BOXSZ = [0.1,0.1];
            ANNO_SHIFT = [-0.11,0.045];
            ltxs = x_shift+ANNO_SHIFT(1)*FG_ANN_FIX(1)+(ANNO_BOXSZ(1)/2); %0.7069*FG_FIX(1)+fx_shift+LAB_B_YOFFSET+(0.1/2);
            ltys = y_shift+ANNO_SHIFT(2)*FG_ANN_FIX(2)+(ANNO_BOXSZ(2)/2); %+fy_shift+LAB_B_XOFFSET+(0.1/2);
            annotation(fig,'textbox',[ltxs,ltys,ANNO_BOXSZ],...
                'String',sprintf('%s',PANEL_LETTER{p_cnt}), ...
                ANN_PROPS{:});
            p_cnt = p_cnt + 1;
        end

        %## SIGNIFICANCE KEY
        if x_cnt == 1 & y_cnt == 1
            % KEY_CHARS = {'Significance levels of alpha = 0.05, 0.01, 0.001:' ...
            %     [sprintf('Interaction: %s, %s%s, %s%s%s, ',char(8225),char(8225),char(8225),char(8225),char(8225),char(8225)), ...
            %     'Speed: *, **, ***, ', ...
            %     'Group: +, ++, +++']};
            % FG_ANN_FIX = [1,1];
            % ANNO_BOXSZ = [0.9,0.1];
            % ANNO_SHIFT = [0.4,-0.5];
            % % ltxs = 0.05; %x_shift+ANNO_SHIFT(1)*FG_ANN_FIX(1)+(ANNO_BOXSZ(1)/2); %0.7069*FG_FIX(1)+fx_shift+LAB_B_YOFFSET+(0.1/2);
            % % ltys = 0.9; %y_shift+ANNO_SHIFT(2)*FG_ANN_FIX(2)+(ANNO_BOXSZ(2)/2); %+fy_shift+LAB_B_XOFFSET+(0.1/2);
            % ltxs = x_shift+ANNO_SHIFT(1)*FG_ANN_FIX(1)-(ANNO_BOXSZ(1)/2); %0.7069*FG_FIX(1)+fx_shift+LAB_B_YOFFSET+(0.1/2);
            % ltys = y_shift+ANNO_SHIFT(2)*FG_ANN_FIX(2)+(ANNO_BOXSZ(2)/2); %+fy_shift+LAB_B_XOFFSET+(0.1/2);
            % annotation(fig,'textbox',[ltxs,ltys,ANNO_BOXSZ],...
            %     'String',KEY_CHARS, ...
            %     SIG_K_PROPS{:});


            SIG_K_PROPS = {'HorizontalAlignment','left',...
                'VerticalAlignment','top', ...
                'LineStyle','none', ...
                'FontName','Arial',...
                'FontSize',10*FG_TXT_SZ, ...
                'FontWeight','bold', ...
                'Units','normalized'};
            KEY_CHARS = ['P_{value}<0.05: ', ...
                'Speed (S): *  |  ', ...
                'Group (G): +  |  ', ...
                sprintf('Interaction (S:G): %s',char(8225))];
            FG_ANN_FIX = [1,1];
            ANNO_BOXSZ = [0.9,0.1];
            ANNO_SHIFT = [0.35,-0.46];
            ltxs = x_shift+ANNO_SHIFT(1)*FG_ANN_FIX(1)-(ANNO_BOXSZ(1)/2);
            ltys = y_shift+ANNO_SHIFT(2)*FG_ANN_FIX(2)+(ANNO_BOXSZ(2)/2);
            ANNO_POS = [ltxs,ltys,ANNO_BOXSZ];
            annotation(fig,'textbox',ANNO_POS,...
                'String',KEY_CHARS, ...
                SIG_K_PROPS{:});
        end

        %## AX SHIFT
        if x_cnt < X_DIM
            x_shift = x_shift + AX_SLIDE(1)*IM_RESIZE*AX_SZ(1);
        else
            y_shift = y_shift + AX_SLIDE(2)*IM_RESIZE*AX_SZ(2);
            x_shift = AX_INIT_X;
            x_cnt = 0;
            y_cnt = y_cnt + 1;
        end
        x_cnt = x_cnt + 1;  
    end
    %%
    fname = sprintf('%s_%s_tbo_mustd_manscript_plot',output_titles{cl_ii},meas_ext);
    exportgraphics(fig,[tmp_savedir filesep fname '.pdf'],...
        'ContentType','Vector')
    exportgraphics(fig,[tmp_savedir filesep fname '.png'],...
        'Resolution',SAVE_RES)
    % close(fig)
end