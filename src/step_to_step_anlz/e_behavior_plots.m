%   Project Title: MIM YOUNGER AND OLDER ADULTS KINEMATICS-EEG ANALYSIS
%
%   Code Designer: Jacob salminen
%## SBATCH (SLURM KICKOFF SCRIPT)
% sbatch /blue/dferris/jsalminen/GitHub/par_EEGProcessing/src/2_STUDY/mim_yaoa_speed_kin/.sh

%{
%## RESTORE MATLAB
% WARNING: restores default pathing to matlab 
restoredefaultpath;
clc;
close all;
clearvars
clear java
%}
%% SET WORKSPACE ======================================================= %%
% opengl('dsave', 'software') % might be needed to plot dipole plots?
%## TIME
tic
ADD_CLEANING_SUBMODS = false;
%## Determine Working Directories
if ~ispc
    try
        SCRIPT_DIR = matlab.desktop.editor.getActiveFilename;
        SCRIPT_DIR = fileparts(SCRIPT_DIR);
        STUDY_DIR = fileparts(SCRIPT_DIR); % change this if in sub folder
        SRC_DIR = fileparts(fileparts(STUDY_DIR));
    catch e
        fprintf('ERROR. PWD_DIR couldn''t be set...\n%s',getReport(e))
        STUDY_DIR = getenv('STUDY_DIR');
        SCRIPT_DIR = getenv('SCRIPT_DIR');
        SRC_DIR = getenv('SRC_DIR');
    end
else
    try
        SCRIPT_DIR = matlab.desktop.editor.getActiveFilename;
        SCRIPT_DIR = fileparts(SCRIPT_DIR);
    catch e
        fprintf('ERROR. PWD_DIR couldn''t be set...\n%s',getReport(e))
        SCRIPT_DIR = dir(['.' filesep]);
        SCRIPT_DIR = SCRIPT_DIR(1).folder;
    end
    STUDY_DIR = fileparts(SCRIPT_DIR); % change this if in sub folder
    SRC_DIR = fileparts(fileparts(STUDY_DIR));
end
%## Add Study, Src, & Script Paths
addpath(SCRIPT_DIR)
addpath(SRC_DIR);
addpath(STUDY_DIR);
cd(SRC_DIR);
fprintf(1,'Current folder: %s\n',SRC_DIR);
%## Set PWD_DIR, EEGLAB path, _functions path, and others...
set_workspace
%% (DATASET INFORMATION) =============================================== %%
% [SUBJ_PICS,GROUP_NAMES,SUBJ_ITERS,~,~,~,~] = mim_dataset_information('yaoa_spca');
[SUBJ_PICS,GROUP_NAMES,SUBJ_ITERS,~,~,~,~] = mim_dataset_information('yaoa_spca_speed');
%% (PARAMETERS) ======================================================== %%
%## hard define
%- datset name
DATA_SET = 'MIM_dataset';
%- study name
STUDY_DNAME = '10172024_MIM_YAOAN89_antsnorm_dipfix_iccREMG0p4_powpow0p3_skull0p01_15mmrej_speed';
STUDY_FNAME = 'kin_eeg_epoch_study';
ANALYSIS_DNAME = 'kin_eeg_step_to_step';
%- statistics & conditions
speed_trials = {'0p25','0p5','0p75','1p0'};
terrain_trials = {'flat','low','med','high'};
COND_DESIGNS = {speed_trials,terrain_trials};
%-
cmap_terrain = linspecer(4);
custom_yellow = [254,223,0]/255;
cmap_terrain = [cmap_terrain(3,:);custom_yellow;cmap_terrain(4,:);cmap_terrain(2,:)];
cmap_speed = linspecer(4*3);
cmap_speed = [cmap_speed(1,:);cmap_speed(2,:);cmap_speed(3,:);cmap_speed(4,:)];
%* ERSP PARAMS
ERSP_STAT_PARAMS = struct('condstats','on',... % ['on'|'off]
    'groupstats','off',... %['on'|'off']
    'method','perm',... % ['param'|'perm'|'bootstrap']
    'singletrials','off',... % ['on'|'off'] load single trials spectral data (if available). Default is 'off'.
    'mode','fieldtrip',... % ['eeglab'|'fieldtrip']
    'fieldtripalpha',0.05,... % [NaN|alpha], Significance threshold (0<alpha<<1)
    'fieldtripmethod','montecarlo',... %[('montecarlo'/'permutation')|'parametric']
    'fieldtripmcorrect','cluster',...  % ['cluster'|'fdr']
    'fieldtripnaccu',2000);
SPEC_PARAMS = struct('freqrange',[1,200],...
    'subject','',...
    'specmode','psd',...
    'freqfac',4,...
    'logtrials','on',...
    'comps','all',...
    'plot_freqrange',[4,60],...
    'plot_ylim',[-35,-8],...
    'subtractsubjectmean','on',...
    'plotmode','normal');
ERSP_PARAMS = struct('subbaseline','off',...
    'timerange',[],...
    'ersplim',[-2,2],...
    'freqfac',4,...
    'cycles',[3,0.8],...
    'freqrange',[1,200]);
%% (PATHS)
studies_fpath = [PATHS.src_dir filesep '_data' filesep DATA_SET filesep '_studies'];
%- load cluster
CLUSTER_K = 11;
CLUSTER_STUDY_NAME = 'temp_study_rejics5';
cluster_fpath = [studies_fpath filesep sprintf('%s',STUDY_DNAME) filesep '__iclabel_cluster_kmeansalt_rb10'];
% cluster_fpath = [studies_fpath filesep sprintf('%s',STUDY_DNAME) filesep '__iclabel_cluster_kmeansalt_rb3'];
cluster_study_fpath = [cluster_fpath filesep 'icrej_5'];
cluster_k_dir = [cluster_study_fpath filesep sprintf('%i',CLUSTER_K)];
%% ===================================================================== %%
% if ~ispc
%     [STUDY,ALLEEG] = pop_loadstudy('filename',[STUDY_FNAME '_UNIX.study'],'filepath',save_dir);
% else
%     [STUDY,ALLEEG] = pop_loadstudy('filename',[STUDY_FNAME '.study'],'filepath',save_dir);
% end
%## LOAD STUDY
if ~ispc
    tmp = load('-mat',[studies_fpath filesep sprintf('%s',STUDY_DNAME) filesep sprintf('%s_UNIX.study',STUDY_FNAME)]);
    STUDY = tmp.STUDY;
else
    tmp = load('-mat',[studies_fpath filesep sprintf('%s',STUDY_DNAME) filesep sprintf('%s.study',STUDY_FNAME)]);
    STUDY = tmp.STUDY;
end
%-
cl_struct = par_load(cluster_k_dir,sprintf('cl_inf_%i.mat',CLUSTER_K));
STUDY.cluster = cl_struct;
[comps_out,main_cl_inds,outlier_cl_inds] = eeglab_get_cluster_comps(STUDY);
CLUSTER_PICS = main_cl_inds;
%-
save_dir = [cluster_k_dir filesep ANALYSIS_DNAME];
if ~exist(save_dir,'dir')
    mkdir(save_dir);
end
%% MEASURES TO ANALYZE ================================================= %%
% KINNAMES = {'step_width_mm','ap_exc_mm'};
% KINNAMES_LABS = {'Step Width (m)','AP Excursion (m)'};
%-
KINNAMES = {'step_width_mm','ap_exc_mm','step_width_mm_gc','ap_exc_mm_gc'};
KINNAMES_LABS = {'ML Excursion (m)','AP Excursion (m)','ML Excursion (m)','AP Excursion (m)'};
%% (LOAD STATISTICS & DATA EXCEL SHEET FROM R) ========================= %%
%-
KIN_TABLE = par_load(save_dir,'step_by_step_eeg_psd_prepost_table.mat');
% KIN_TABLE = par_load(save_dir,'step_by_step_eeg_ersp_trialbase_table.mat');
subj_chars = unique(KIN_TABLE.subj_char);
strides = zeros(length(subj_chars),1);
for i = 1:length(subj_chars)
    tmp = KIN_TABLE(strcmp(subj_chars{i},KIN_TABLE.subj_char),:);
    strides(i) = max(tmp.stride_n);
end
fprintf('mean number of strides: %0.2f\n',mean(strides));
fprintf('std number of strides: %0.2f\n',std(strides));
%- 
r_stats_dir = [PATHS.src_dir filesep '2_STUDY' filesep 'mim_yaoa_speed_kin' filesep 'r_scripts' filesep 'sbs_lme_mods'];
% RSTATS_IMPORT = readtable([r_stats_dir filesep 'moderation_eeg_psd_kin_speed_intact_nonorm_sepgroup.xlsx'], ...
%     "FileType","spreadsheet","UseExcel",true);
% RSTATS_IMPORT = readtable([r_stats_dir filesep 'moderation_eeg_psd_kin_speed_intact_nonorm_swonly.xlsx'], ...
%     "FileType","spreadsheet","UseExcel",true);
RSTATS_IMPORT = readtable([r_stats_dir filesep 'speed_kin_lme_behavior.xlsx'], ...
    "FileType","spreadsheet","UseExcel",true);
%% ===================================================================== %%
%## PARAMETERS
%-
designs = unique(KIN_TABLE.model_n);
clusters = unique(KIN_TABLE.cluster_n);
groups = unique(KIN_TABLE.group_n);
group_chars = unique(KIN_TABLE.group_char);
cond_chars = unique(KIN_TABLE.cond_char);
speed_ns = unique(KIN_TABLE.speed_n);
% clusters = unique(RSTATS_IMPORT.cluster_num);
% models = unique(RSTATS_IMPORT.model_char);
%- colors
cmaps_terrain = linspecer(4);
custom_yellow = [254,223,0]/255;
cmaps_terrain = [cmaps_terrain(3,:);custom_yellow;cmaps_terrain(4,:);cmaps_terrain(2,:)];
cmaps_speed = linspecer(4*3);
cmaps_speed = [cmaps_speed(1,:);cmaps_speed(2,:);cmaps_speed(3,:);cmaps_speed(4,:)];
xtick_label_c = {'0.25 m/s','0.50 m/s','0.75 m/s','1.0 m/s'};
%-
SAVE_RES = 300;
TITLE_TXT_SIZE = 14;
IM_RESIZE = 1;
AX_W = 0.35;
AX_H = 0.25;
AX_FONT_NAME = 'Arial';
AX_X_SHIFT = 1.2;
AX_Y_SHIFT = 1.55;
AX_INIT_X = 0.1;
AX_INIT_Y = 0.6;
X_DIM = 2;
%-
% DO_PLOT_R2 = true;
% REG_TXT_SIZE = 8; % 7
% REG_X_SHIFT = 0.18; % 0.08
% REG_Y_SHIFT = 0.13; % 0.1k
%-
LEG_X_SHIFT = -0.125; %-0.1
LEG_Y_SHIFT =  -0.33; %-0.38
LEG_TXT_SIZE = 9;
LEG_TOKEN_SIZE = 15;
%## 
AXES_DEFAULT_PROPS = {'box','off', ...
    'xtick',[], ...
    'ytick',[],...
    'ztick',[], ...
    'xcolor',[1,1,1], ...
    'ycolor',[1,1,1]};

CL_TITLES = {'','','Right Sensorimotor','Mid Cingulate','Left Temporal','Right Occipital',...
    'Right Premotor','Left Occipital','Left Sensorimotor','Right Posterior Parietal',...
    'Left Posterior Parietal',...
    'Left Supplementary Motor','Right Temporal'};
%## VIOLIN PLOTS
VIO_PLOT_STRUCT = struct('color_map',cmaps_speed,...
    'cond_labels',{{'0.25','0.50','0.75','1.0'}},...
    'cond_offsets',[-0.35,-0.1,0.15,0.40],...
    'group_labels',{{'All'}},...
    'group_offsets',[0.75],...
    'group_lab_yoffset',-0.26,...
    'group_lab_fontweight','normal',...
    'group_lab_fontsize',10,...
    'y_label','',...
    'y_label_fontsize',10,...
    'y_label_fontweight','bold',...
    'ylim',[],...
    'x_label','Speed (m/s)',...
    'x_label_fontsize',10,...
    'x_label_fontweight','bold',...
    'x_label_yoffset',-0.155,...
    'xlim',[],...
    'title',{{''}},...
    'title_fontsize',10,...
    'title_fontweight','bold',...
    'font_size',9,...
    'font_name','Arial',...
    'do_combine_groups',true,...
    'regresslab_txt_size',7,...
    'ax_position',[0,0,1,1],...
    'ax_line_width',1,...
    'xtick_angle',75);
VIO_PARAMS = {'width',0.1,...
    'ShowWhiskers',false,...
    'ShowNotches',false,'ShowBox',true,...
    'ShowMedian',true,...
    'Bandwidth',0.15,...
    'QuartileStyle','shadow',...
    'HalfViolin','full',...
    'DataStyle','scatter',...
    'MarkerSize',8,...
    'EdgeColor',[0.5,0.5,0.5],...
    'ViolinAlpha',{0.2 0.3}};
DEF_STATS_STRUCT = struct('anova',{{}},...
    'anova_grp',{{}},...
    'pvals',{{}},...
    'pvals_pairs',{{}},...
    'pvals_grp',{{}},...
    'pvals_grp_pairs',{{}},...
    'regress_pval',{{}},...
    'regress_line',{{}},...
    'line_type',{'best_fit'},... % ('best_fit' | 'means')
    'regress_xvals',0,...
    'subject_char',[],... % this option when filled prints removal of nan() info
    'group_order',categorical({''}),...
    'display_stats_char',false,... 
    'stats_char',{{}});
DEF_BRACKET_STRUCT = struct('sig_sign','+',...
    'line_specs',{{'LineStyle','-','LineWidth',2,'Color','k'}},...
    'text_specs',{{'FontSize',10,'FontName','Arial','FontWeight','bold'}},...
    'bracket_conn',[],...
    'conn_offset_y_upper',[],...
    'bracket_offset_y_upper',0,...
    'bracket_offset_y_lower',0,...
    'sig_levels',[0.05,0.01,0.001],...
    'sig_offset_x',0,...
    'sig_offset_y',[]);
DEF_SIGLINE_STRUCT = struct('sig_sign','*',...
    'line_specs',{{'LineStyle','-','LineWidth',2,'Color','k'}},...
    'text_specs',{{'FontSize',10,'FontName','Arial','FontWeight','bold'}},...
    'conn_y',[],...
    'conn_offset_y',[],...
    'sig_levels',[0.05,0.01,0.001],...
    'sig_offset_x',0,...
    'sig_offset_y',0);
%% ===================================================================== %%
clusters_chk = zeros(length(clusters),1);
tmp_savedir = [save_dir filesep 'psd_behavior_all'];
mkdir(tmp_savedir);
KIN_CUTOFF = [0.005,1];
des_i = 2;
for cl_i = 1:length(clusters)
    %## SET SHIFTS
    x_cnt = 1;
    y_shift = AX_INIT_Y;
    x_shift = AX_INIT_X;
    %## INITIATE FIGURE
    atlas_name = CL_TITLES{double(string(clusters(cl_i)))};
    fig = figure('color','white');
    sgtitle(atlas_name,'FontName',AX_FONT_NAME,'FontSize',TITLE_TXT_SIZE,'FontWeight','bold','Interpreter','none');
    set(fig, ...
        'Units','inches', ...
        'Position',[0.5,0.5,6.5,9])
    set(fig, ...
        'PaperUnits','inches', ...
        'PaperSize',[1 1], ...
        'PaperPosition',[0 0 1 1])
    hold on;
    set(gca,AXES_DEFAULT_PROPS{:})
    for kin_i = 1:length(KINNAMES)
        %## SUB-SELECT DATA
        tmp_kint = KIN_TABLE;
        %-
        inds = tmp_kint.model_n == des_i &... %designs(des_i) &...
                tmp_kint.cluster_n == clusters(cl_i);
        muc = mean(tmp_kint.(KINNAMES{kin_i}));
        stdc = std(tmp_kint.(KINNAMES{kin_i}));
        inds_keep = tmp_kint.(KINNAMES{kin_i}) > muc-3*stdc & tmp_kint.(KINNAMES{kin_i}) < muc+3*stdc;                
        tmp_kint = tmp_kint(inds & inds_keep,:);
        %-
        inds = tmp_kint.(KINNAMES{kin_i}) >= KIN_CUTOFF(1) & ...
            tmp_kint.(KINNAMES{kin_i}) <= KIN_CUTOFF(2);
        tmp_kint = tmp_kint(inds,:);
        %-
        y_lim_calc = [min(tmp_kint.(KINNAMES{kin_i}))-1*std(tmp_kint.(KINNAMES{kin_i})),...
            max(tmp_kint.(KINNAMES{kin_i}))+1*std(tmp_kint.(KINNAMES{kin_i}))];
        %## STATS
        tmp_stats = RSTATS_IMPORT.cluster_num==double(string(clusters(cl_i))) &...
            strcmp(RSTATS_IMPORT.model_char,'all') &...
            strcmp(RSTATS_IMPORT.kinematic_char,KINNAMES{kin_i}) &...
            strcmp(RSTATS_IMPORT.group_char,'all');
        tmp_stats = RSTATS_IMPORT(tmp_stats,:);
        %-
        tmp_stats_struct = struct('anova',{{tmp_stats.pval_sp}},...
            'anova_grp',{{}},...
            'pvals',{{}},...
            'pvals_pairs',{{}},...
            'pvals_grp',{{}},...
            'pvals_grp_pairs',{{}},...
            'regress_pval',{{tmp_stats.pval_sp}},...
            'regress_line',{{[tmp_stats.coeff_int,tmp_stats.coeff_sp]}},...
            'line_type',{'best_fit'},... % ('best_fit' | 'means')
            'regress_xvals',[0,0.25,0.5,0.75,1.0,1.25],...
            'subject_char',[],... % this option when filled prints removal of nan() info
            'group_order',categorical({''}),...
            'display_stats_char',true,... 
            'stats_char',{{sprintf('eta^2 = %0.2f\ny=(%1.2f)x+(%1.2f)',tmp_stats.etasq_sp,tmp_stats.coeff_sp,tmp_stats.coeff_sp)}});
        %## PLOT
        ax = axes();
        %-
        % VIO_PLOT_STRUCT.color_map = cmaps_speed;
        % VIO_PLOT_STRUCT.cond_labels = xtick_label_c;
        VIO_PLOT_STRUCT.title = KINNAMES_LABS(kin_i);
        if kin_i == 1
            VIO_PLOT_STRUCT.y_label = KINNAMES_LABS{kin_i};
        else
            VIO_PLOT_STRUCT.y_label ='';
        end
        VIO_PLOT_STRUCT.ylim = y_lim_calc;
        VIO_PLOT_STRUCT.ax_position = [x_shift,y_shift,AX_W*IM_RESIZE,AX_H*IM_RESIZE];
        %-
        ax = group_violin(tmp_kint,KINNAMES{kin_i},'speed_char','group_char',...
            ax,...
            'VIOLIN_PARAMS',VIO_PARAMS,...
            'PLOT_STRUCT',VIO_PLOT_STRUCT,...
            'STATS_STRUCT',tmp_stats_struct,...
            'BRACKET_STRUCT',DEF_BRACKET_STRUCT,...
            'SIGLINE_STRUCT',DEF_SIGLINE_STRUCT);
        %## AX SHIFT
        if x_cnt < X_DIM
            x_shift = x_shift + AX_X_SHIFT*IM_RESIZE*AX_W;
        else
            y_shift = y_shift - AX_Y_SHIFT*IM_RESIZE*AX_H;
            x_shift = AX_INIT_X;
            x_cnt = 0;
        end
        x_cnt = x_cnt + 1;
    end
    %## SAVE
    exportgraphics(fig,[tmp_savedir filesep sprintf('behavior_cl%s_plot_allsubj.tiff',string(clusters(cl_i)))], ...
        'Resolution',SAVE_RES)
    close(fig)
end