tbl =
lmer(str_glue(mod_char), data=tmpt) %>%
tbl_regression(tidy_fun = broom.mixed::tidy,
pvalue_fun = purrr::partial(style_pvalue, digits = 2),
intercept=TRUE) %>%
add_global_p() %>%
add_q() %>%
list()
) %>%
pull(tbl) %>%
tbl_merge(tab_spanner=eeg_title_chars[eeg_inds_plot])
#- HTML TAG
cat(paste0("\n\n### ", ci,",",groups[gi],",", kin_measures[ki], "\n"))
#%% PRINT TABLE
t_out <- as_gt(tbl) %>%
gt::tab_header(title=c("Changes in ",kin_measures[ki],"for Cluster: ",ci)) %>%
gt::tab_options(table.layout = "fixed") %>%
gt::as_raw_html()
print(t_out)
rsq <- tibble(outcome=eeg_measures[eeg_inds_plot]) %>%
rowwise() %>%
mutate(
mod =
lmer(str_glue(mod_char), data=tmpt) %>%
r.squaredGLMM(),
print(str_glue("{outcome}\n R2m: {round(mod[1],4)},\tR2c: {round(mod[2],4)}\n\n"))
)
#%% VISUALIZATION OF MODELS
theme_set(theme_classic()) # This sets the default ggplot theme
fitfit <- tibble(outcome=eeg_measures[eeg_inds_plot]) %>%
rowwise() %>%
mutate(
mod =
lmer(str_glue(mod_char), data=tmpt)%>%
list()
)
for(modi in 1:length(eeg_measures[eeg_inds_plot])){
eegi = eeg_inds_plot[modi]
#%%
cat(paste0("\n\n#### ",eeg_title_chars[modi]," model effect sizes\n"))
alt_mod_char_int = paste(eeg_measures[eegi]," ~ 1 + (1|subj_char)");
alt_mod_char_1 = paste(eeg_measures[eegi]," ~ 1 + speed_cond_num + ",kin_measures[ki]," + (1|subj_char)");
alt_mod_char_2 = paste(eeg_measures[eegi]," ~ 1 + ",kin_measures[ki]," + speed_cond_num:",kin_measures[ki]," + (1|subj_char)");
alt_mod_char_3 = paste(eeg_measures[eegi]," ~ 1 + speed_cond_num + speed_cond_num:",kin_measures[ki]," + (1|subj_char)");
#--
print('intercept model\n');
tmp_mod = lmer(str_glue(alt_mod_char_int), data=tmpt)
vals1=calc_cohensf2(fitfit$mod[[modi]], tmp_mod)
#--
print('no interaction model\n');
tmp_mod = lmer(str_glue(alt_mod_char_1), data=tmpt)
vals4=calc_cohensf2(fitfit$mod[[modi]], tmp_mod)
#--
print('no speed model\n');
tmp_mod = lmer(str_glue(alt_mod_char_2), data=tmpt)
vals2=calc_cohensf2(fitfit$mod[[modi]], tmp_mod)
#--
print('no kinematic model\n');
tmp_mod = lmer(str_glue(alt_mod_char_3), data=tmpt)
vals3=calc_cohensf2(fitfit$mod[[modi]], tmp_mod)
#--
vals <- fitfit$mod[[modi]]
anv_vals <- car::Anova(fitfit$mod[[modi]],type=3)
#--
library(DescTools)
library(rstatix)
eta_squared(vals)
partial_eta_squared(vals)
compute_eta_squared(
extract_sum_squares(vals, car::Anova(vals, type = 3))
)
DescTools::EtaSq(anv_vals,type=3)
new_row = data.frame(cluster_num=ci,
group_char=groups[gi],
model_char=c('interaction'),
kinematic_char=c(kin_measures[ki]),
freq_band_char=c(eeg_measures[eegi]),
coeff_int=vals@beta[1],
coeff_sp=vals@beta[2],
coeff_kin=vals@beta[3],
coeff_intact=vals@beta[4],
pval_int=anv_vals$`Pr(>Chisq)`[1],
pval_sp=anv_vals$`Pr(>Chisq)`[2],
pval_kin=anv_vals$`Pr(>Chisq)`[3],
pval_intact=anv_vals$`Pr(>Chisq)`[4],
r2_m_int=vals1$r2m,
r2_c_int=vals1$r2c,
f2_m_int=vals1$f2m,
f2_c_int=vals1$f2c,
r2_m_nsp=vals2$r2m,
r2_c_nsp=vals2$r2c,
f2_m_nsp=vals2$f2m,
f2_c_nsp=vals2$f2c,
r2_m_nkin=vals3$r2m,
r2_c_nkin=vals3$r2c,
f2_m_nkin=vals3$f2m,
f2_c_nkin=vals3$f2c,
r2_m_nintact=vals4$r2m,
r2_c_nintact=vals4$r2c,
f2_m_nintact=vals4$f2m,
f2_c_nintact=vals4$f2c)
excel_df <- rbind(excel_df,new_row)
#%% MODEL VALIDATIONS
cat(paste0("\n\n#### ",eeg_title_chars[modi]," model validations\n"))
tmpt <- tmpt %>%
mutate(fit.m = predict(fitfit$mod[[modi]], re.form = NA),
fit.c = predict(fitfit$mod[[modi]], re.form = NULL))
print(plot_model(fitfit$mod[[modi]], type = 'diag'))
cat("\n")
#%% EXCEL PRINTS
cat(paste0("\n\n#### ",eeg_title_chars[modi]," plot\n"))
#%% SCATTER3D IMPLEMENTATION
xc = "speed_cond_num";
yc = kin_measures[ki];
intc = paste0(xc,":",yc)
fix_effs <- fixef(fitfit$mod[[modi]])
ran_effs <- ranef(fitfit$mod[[modi]])$subj_char
#- plot
pch_n = 1;
conds = rev(unique(tmpt[[xc]]))
for(i in 1:length(conds)){
ts <- filter_at(tmpt,vars(xc),all_vars(. == conds[i]))
if(i == 1){
scatter <- scatterplot3d(ts[[yc]], ts[[xc]], ts[[eeg_measures[eegi]]],
main = paste0(eeg_title_chars[modi],"plot"),
xlab = kin_title_chars[ki],
ylab = "Speed (m/s)",
zlab = eeg_title_chars[eegi],
xlim = c(min(tmpt[[yc]]),max(tmpt[[yc]])),
ylim = c(min(tmpt[[xc]]),max(tmpt[[xc]])),
zlim = c(min(tmpt[[eeg_measures[eegi]]]),max(tmpt[[eeg_measures[eegi]]])),
pch = pch_n,
color = color_pal_subj[i],
angle = 30) # adjust the viewing angle
} else {
scatter$points3d(ts[[yc]], ts[[xc]], ts[[eeg_measures[eegi]]] ,
main = paste0(eeg_title_chars[modi],"plot"),
col = color_pal_subj[i],
pch=pch_n)
}
}
a <- fix_effs[xc]
b <- fix_effs[yc]
c <- fix_effs[intc]
d <- fix_effs["(Intercept)"]
# Create the plane's z-values using the equation of the plane
plane_z <- function(y,x){a*x+b*y+c*x*y+d}
scatter$contour3d(plane_z,y.count=4,
x.count=4,
y.resolution=10,
x.resolution=10,
lty="24",
type="l")
# print(scatter)
# l[[cnt]] <- tagList(HTML(markdown::mark(text=paste0("\n\n#### ", cnt, "\n"))),scatter)
}
}
}
}
# write.xlsx(excel_df,"moderation_eeg_psd_kin_speed_intact_nonorm_sepgroup.xlsx")
DescTools::EtaSq(anv_vals,type=3)
extract_sum_squares(vals, car::Anova(vals, type = 3)
)
calc_cohensf2 <- function(mod_main,mod_alt){
r2_out = r.squaredGLMM(mod_main);
r2_outalt = r.squaredGLMM(mod_alt);
r2m = r2_out[1] # input your R2
f2m = r2m/(1 - r2m)
r2c = r2_out[2] # input your R2
f2c = r2c/(1 - r2c)
f2m = (r2_out[1]-r2_outalt[1])/(1-r2_out[1]);
f2c = (r2_out[2]-r2_outalt[2])/(1-r2_out[2]);
print(str_glue("r2m: {round(r2m,4)},\tr2c: {round(r2c,4)}\n\n"))
print(str_glue("f2m: {round(f2m,4)},\tf2c: {round(f2c,4)}\n\n"))
vals = data.frame(r2m, r2c, f2m, f2c);
return (vals)
}
#%% EXCEL DATAFRAME
excel_df <- data.frame(cluster_num=double(),
group_char=character(),
model_char=character(),
kinematic_char=character(),
freq_band_char=character(),
coeff_int=double(),
coeff_sp=double(),
coeff_kin=double(),
coeff_intact=double(),
pval_int=double(),
pval_sp=double(),
pval_kin=double(),
pval_intact=double(),
r2_m_int=double(),
r2_c_int=double(),
f2_m_int=double(),
f2_c_int=double(),
r2_m_nsp=double(),
r2_c_nsp=double(),
f2_m_nsp=double(),
f2_c_nsp=double(),
r2_m_nkin=double(),
r2_c_nkin=double(),
f2_m_nkin=double(),
f2_c_nkin=double(),
r2_m_nintact=double(),
r2_c_nintact=double(),
f2_m_nintact=double(),
f2_c_nintact=double())
extract_sum_squares <- function(model, anova) {
y <- fitted(model) + residuals(model)
SS <- anova["Sum Sq"]
SSeffect <- subset(SS, !(rownames(SS) %in% c("(Intercept)", "Residuals")))
SSerror <- SS["Residuals", ]
SStotal <- sum((y - mean(y))^2)
list(
SSeffect = SSeffect,
SSerror = SSerror,
SStotal = SStotal
)
}
compute_eta_squared <- function(SS) {
cbind(
setNames(SS$SSeffect / SS$SStotal, "eta.squared"),
setNames(SS$SSeffect / (SS$SSeffect + SS$SSerror), "partial.eta.squared")
)
}
compute_eta_squared(
extract_sum_squares(vals, car::Anova(vals, type = 3))
)
vals
vals <- fitfit$mod[[modi]]
anv_vals <- car::Anova(fitfit$mod[[modi]],type=3)
#--
vals
anv_vals
rownames(anv_vals)
anova(vals)
anova(vals,type-3)
anova(vals,type=3)
anova(vals)
Anova(vals)
aov(vals)
anova(vals,type=3)
install.packages('lmerTest')
library(lmerTest)
lmerTest::anova(vals,type=3)
anova(vals,type=3)
compute_eta_squared(
extract_sum_squares(vals,anova(vals,type=3))
)
compute_eta_squared(
extract_sum_squares(vals,anova(vals))
)
extract_sum_squares(vals,anova(vals)
)
compute_eta_squared(
extract_sum_squares(vals,anova(vals))
)
calc_cohensf2 <- function(mod_main,mod_alt){
r2_out = r.squaredGLMM(mod_main);
r2_outalt = r.squaredGLMM(mod_alt);
r2m = r2_out[1] # input your R2
f2m = r2m/(1 - r2m)
r2c = r2_out[2] # input your R2
f2c = r2c/(1 - r2c)
f2m = (r2_out[1]-r2_outalt[1])/(1-r2_out[1]);
f2c = (r2_out[2]-r2_outalt[2])/(1-r2_out[2]);
print(str_glue("r2m: {round(r2m,4)},\tr2c: {round(r2c,4)}\n\n"))
print(str_glue("f2m: {round(f2m,4)},\tf2c: {round(f2c,4)}\n\n"))
vals = data.frame(r2m, r2c, f2m, f2c);
return (vals)
}
#%% EXCEL DATAFRAME
excel_df <- data.frame(cluster_num=double(),
group_char=character(),
model_char=character(),
kinematic_char=character(),
freq_band_char=character(),
coeff_int=double(),
coeff_sp=double(),
coeff_kin=double(),
coeff_intact=double(),
pval_int=double(),
pval_sp=double(),
pval_kin=double(),
pval_intact=double(),
r2_m_int=double(),
r2_c_int=double(),
f2_m_int=double(),
f2_c_int=double(),
r2_m_nsp=double(),
r2_c_nsp=double(),
f2_m_nsp=double(),
f2_c_nsp=double(),
r2_m_nkin=double(),
r2_c_nkin=double(),
f2_m_nkin=double(),
f2_c_nkin=double(),
r2_m_nintact=double(),
r2_c_nintact=double(),
f2_m_nintact=double(),
f2_c_nintact=double())
extract_sum_squares <- function(model, anova) {
y <- fitted(model) + residuals(model)
SS <- anova["Sum Sq"]
SSeffect <- subset(SS, !(rownames(SS) %in% c("(Intercept)", "Residuals")))
SSerror <- SS["Residuals", ]
SStotal <- sum((y - mean(y))^2)
list(
SSeffect = SSeffect,
SSerror = SSerror,
SStotal = SStotal
)
}
compute_eta_squared <- function(SS) {
vals = cbind(
setNames(SS$SSeffect / SS$SStotal, "eta.squared"),
setNames(SS$SSeffect / (SS$SSeffect + SS$SSerror), "partial.eta.squared")
)
return (vals)
}
eff <- compute_eta_squared(
extract_sum_squares(vals,anova(vals))
)
eff
eegi = eeg_inds_plot[modi]
#%%
cat(paste0("\n\n#### ",eeg_title_chars[modi]," model effect sizes\n"))
alt_mod_char_int = paste(eeg_measures[eegi]," ~ 1 + (1|subj_char)");
alt_mod_char_1 = paste(eeg_measures[eegi]," ~ 1 + speed_cond_num + ",kin_measures[ki]," + (1|subj_char)");
alt_mod_char_2 = paste(eeg_measures[eegi]," ~ 1 + ",kin_measures[ki]," + speed_cond_num:",kin_measures[ki]," + (1|subj_char)");
alt_mod_char_3 = paste(eeg_measures[eegi]," ~ 1 + speed_cond_num + speed_cond_num:",kin_measures[ki]," + (1|subj_char)");
#--
print('intercept model\n');
tmp_mod = lmer(str_glue(alt_mod_char_int), data=tmpt)
vals1=calc_cohensf2(fitfit$mod[[modi]], tmp_mod)
#--
print('no interaction model\n');
tmp_mod = lmer(str_glue(alt_mod_char_1), data=tmpt)
vals4=calc_cohensf2(fitfit$mod[[modi]], tmp_mod)
#--
print('no speed model\n');
tmp_mod = lmer(str_glue(alt_mod_char_2), data=tmpt)
vals2=calc_cohensf2(fitfit$mod[[modi]], tmp_mod)
#--
print('no kinematic model\n');
tmp_mod = lmer(str_glue(alt_mod_char_3), data=tmpt)
vals3=calc_cohensf2(fitfit$mod[[modi]], tmp_mod)
#--
vals <- fitfit$mod[[modi]]
anv_vals <- car::Anova(fitfit$mod[[modi]],type=3)
vals3
vals1
vals1$r2m
vals4$r2m
partial_eta_squared(vals)
partial_eta_squared(vals)
library(car);
library(effectsize)
eta_squared_results <- eta_squared(anv_vals, partial = TRUE)
vals <- fitfit$mod[[modi]]
anv_vals <- car::Anova(fitfit$mod[[modi]],type=3)
eta_squared_results <- eta_squared(anv_vals, partial = TRUE)
anv_vals
eta_squared_results <- effectsize::eta_squared(anv_vals, partial = TRUE)
eta_squared_results <- effectsize::eta_squared(vals, partial = TRUE)
eta_squared_results
effectsize::cohens_f_squared(vals)
eeg_measures[modi]
kin_measures[ki]
ci
gi
etasq_res$Eta2_partial
etasq_res <- effectsize::eta_squared(vals, partial = TRUE)
cohens_fsq_res <- effectsize::cohens_f_squared(vals)
cohens_fsq_res$Cohens_f2_partial[1]
etasq_res <- effectsize::eta_squared(vals, partial = TRUE)
cohens_fsq_res <- effectsize::cohens_f_squared(vals)
cohens_fsq_res$etasq_res[3]
cohens_fsq_res$etasq_res
library(sjPlot);
ran_effs
cat(paste0("\n\n#### ",eeg_title_chars[modi]," model effect sizes\n"))
alt_mod_char_int = paste(eeg_measures[eegi]," ~ 1 + (1|subj_char)");
alt_mod_char_1 = paste(eeg_measures[eegi]," ~ 1 + speed_cond_num + ",kin_measures[ki]," + (1|subj_char)");
alt_mod_char_2 = paste(eeg_measures[eegi]," ~ 1 + ",kin_measures[ki]," + speed_cond_num:",kin_measures[ki]," + (1|subj_char)");
alt_mod_char_3 = paste(eeg_measures[eegi]," ~ 1 + speed_cond_num + speed_cond_num:",kin_measures[ki]," + (1|subj_char)");
#--
print('intercept model\n');
tmp_mod = lmer(str_glue(alt_mod_char_int), data=tmpt)
vals1=calc_cohensf2(fitfit$mod[[modi]], tmp_mod)
#--
print('no interaction model\n');
tmp_mod = lmer(str_glue(alt_mod_char_1), data=tmpt)
vals4=calc_cohensf2(fitfit$mod[[modi]], tmp_mod)
#--
print('no speed model\n');
tmp_mod = lmer(str_glue(alt_mod_char_2), data=tmpt)
vals2=calc_cohensf2(fitfit$mod[[modi]], tmp_mod)
#--
print('no kinematic model\n');
tmp_mod = lmer(str_glue(alt_mod_char_3), data=tmpt)
vals3=calc_cohensf2(fitfit$mod[[modi]], tmp_mod)
#--
vals <- fitfit$mod[[modi]]
anv_vals <- car::Anova(fitfit$mod[[modi]],type=3)
#-- calculate effect sizes
etasq_res <- effectsize::eta_squared(vals, partial = TRUE)
cohens_fsq_res <- effectsize::cohens_f_squared(vals)
#--
new_row = data.frame(cluster_num=ci,
group_char=c('all'),
model_char=c('all_interaction'),
kinematic_char=c(kin_measures[ki]),
freq_band_char=c(eeg_measures[eegi]),
coeff_int=vals@beta[1],
coeff_sp=vals@beta[2],
coeff_kin=vals@beta[3],
coeff_intact=vals@beta[4],
pval_int=anv_vals$`Pr(>Chisq)`[1],
pval_sp=anv_vals$`Pr(>Chisq)`[2],
pval_kin=anv_vals$`Pr(>Chisq)`[3],
pval_intact=anv_vals$`Pr(>Chisq)`[4],
r2_m_int=vals1$r2m,
r2_c_int=vals1$r2c,
f2_m_int=vals1$f2m,
f2_c_int=vals1$f2c,
fsq_sp=cohens_fsq_res$Cohens_f2_partial[1],
fsq_kin=cohens_fsq_res$Cohens_f2_partial[2],
fsq_intact=cohens_fsq_res$Cohens_f2_partial[3],
etasq_sp=etasq_res$Eta2_partial[1],
etasq_kin=etasq_res$Eta2_partial[2],
etasq_intact=etasq_res$Eta2_partial[3])
excel_df <- rbind(excel_df,new_row)
#%% MODEL VALIDATIONS
cat(paste0("\n\n#### ",eeg_title_chars[modi]," model validations\n"))
tmpt <- tmpt %>%
mutate(fit.m = predict(fitfit$mod[[modi]], re.form = NA),
fit.c = predict(fitfit$mod[[modi]], re.form = NULL))
print(plot_model(fitfit$mod[[modi]], type = 'diag'))
cat("\n")
#%% EXCEL PRINTS
cat(paste0("\n\n#### ",eeg_title_chars[modi]," plot\n"))
#%% SCATTER3D IMPLEMENTATION
xc = "speed_cond_num";
yc = kin_measures[ki];
intc = paste0(xc,":",yc)
fix_effs <- fixef(fitfit$mod[[modi]])
ran_effs <- ranef(fitfit$mod[[modi]])$subj_char
#- plot
ran_effs
c(ran_effs$`(Intercept)`)
new_row = data.frame(cluster_num=ci,
group_char=c('all'),
model_char=c('all_interaction'),
kinematic_char=c(kin_measures[ki]),
freq_band_char=c(eeg_measures[eegi]),
coeff_int=vals@beta[1],
coeff_sp=vals@beta[2],
coeff_kin=vals@beta[3],
coeff_intact=vals@beta[4],
pval_int=anv_vals$`Pr(>Chisq)`[1],
pval_sp=anv_vals$`Pr(>Chisq)`[2],
pval_kin=anv_vals$`Pr(>Chisq)`[3],
pval_intact=anv_vals$`Pr(>Chisq)`[4],
r2_m_int=vals1$r2m,
r2_c_int=vals1$r2c,
f2_m_int=vals1$f2m,
f2_c_int=vals1$f2c,
fsq_sp=cohens_fsq_res$Cohens_f2_partial[1],
fsq_kin=cohens_fsq_res$Cohens_f2_partial[2],
fsq_intact=cohens_fsq_res$Cohens_f2_partial[3],
etasq_sp=etasq_res$Eta2_partial[1],
etasq_kin=etasq_res$Eta2_partial[2],
etasq_intact=etasq_res$Eta2_partial[3],
ran_effs=c(ran_effs$`(Intercept)`))
new_row = data.frame(cluster_num=ci,
group_char=c('all'),
model_char=c('all_interaction'),
kinematic_char=c(kin_measures[ki]),
freq_band_char=c(eeg_measures[eegi]),
coeff_int=vals@beta[1],
coeff_sp=vals@beta[2],
coeff_kin=vals@beta[3],
coeff_intact=vals@beta[4],
pval_int=anv_vals$`Pr(>Chisq)`[1],
pval_sp=anv_vals$`Pr(>Chisq)`[2],
pval_kin=anv_vals$`Pr(>Chisq)`[3],
pval_intact=anv_vals$`Pr(>Chisq)`[4],
r2_m_int=vals1$r2m,
r2_c_int=vals1$r2c,
f2_m_int=vals1$f2m,
f2_c_int=vals1$f2c,
fsq_sp=cohens_fsq_res$Cohens_f2_partial[1],
fsq_kin=cohens_fsq_res$Cohens_f2_partial[2],
fsq_intact=cohens_fsq_res$Cohens_f2_partial[3],
etasq_sp=etasq_res$Eta2_partial[1],
etasq_kin=etasq_res$Eta2_partial[2],
etasq_intact=etasq_res$Eta2_partial[3],
ran_effs=frame(ran_effs$`(Intercept)`))
paste(unlist(ran_effs$`(Intercept)`),collapse='')
paste(unlist(ran_effs$`(Intercept)`),collapse=',')
ran_efffs
ran_effs
rowNames(ran_effs)
row.names(ran_effs)
paste(unlist(row.names(ran_effs),collapse=','))
paste(unlist(row.names(ran_effs)),collapse=',')
fix_effs
vals
vals@beta[1]
vals@beta[4]
vals@beta[3]
