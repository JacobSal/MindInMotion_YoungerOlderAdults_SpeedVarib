eeg_measures = c('theta_avg_power','alpha_avg_power','beta_avg_power');
eeg_title_chars = c("/Theta","/Alpha","/Beta");
eeg_inds_plot = c(1,2,3);
# cl_title_chars = c('Right Occipital','Left Occipital','Mid Cingulate','Right Sensorimotor','Left Supplementary','Precuneus','Left Temporal','Left Sensorimotor','Right Posterior Parietal','Left Posterior Parietal','Right Temporal');
# cl_inds_plot = c(8,4,10,9,3,5,6,11);
cl_inds_plot = c(8,4,10,9);
group_inds_plot = c(1,2,3);
#%% GROUP PARAMS
subjects = unique(eeg_t$subj_char);
groups = unique(eeg_t$group_char);
clusters = unique(eeg_t$cluster_id);
ci = cl_inds_plot(1);
gi = group_inds_plot[1];
library(gtsummary)
library(lme4)
library(nlme)
library(emmeans)
#%% REMOVE NANS EEG
ci = cl_inds_plot[1];
gi = group_inds_plot[1];
eegi = 1;
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt[[eeg_measures[ki]]]),]
}
ci = cl_inds_plot[1];
gi = group_inds_plot[1];
eegi = 1;
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt_o[[eeg_measures[ki]]]),]
}
tmpt_c <- filter_at(tmpt_o,vars('cluster_id'), any_vars(. %in% c(clusters[ci])))
tmpt <- filter_at(tmpt_c,vars('group_char'), any_vars(. %in% c(groups[gi])))
tbl = lmer("{eeg_measures{eegi}} ~ 1 + speed_cond_num + (1|subj_char)", data=tmpt);
tbl = lmer("{eeg_measures[eegi]} ~ 1 + speed_cond_num + (1|subj_char)", data=tmpt);
eeg_measures
strglue("{eeg_measures[eegi]} ~ 1 + speed_cond_num + (1|subj_char)")
str_glue("{eeg_measures[eegi]} ~ 1 + speed_cond_num + (1|subj_char)")
library(gtsummary)
library(lme4)
library(nlme)
library(emmeans)
#%% REMOVE NANS EEG
ci = cl_inds_plot[1];
gi = group_inds_plot[1];
eegi = 1;
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt_o[[eeg_measures[ki]]]),]
}
tmpt_c <- filter_at(tmpt_o,vars('cluster_id'), any_vars(. %in% c(clusters[ci])))
tmpt <- filter_at(tmpt_c,vars('group_char'), any_vars(. %in% c(groups[gi])))
tbl = lmer(str_glue("{eeg_measures[eegi]} ~ 1 + speed_cond_num + (1|subj_char)"), data=tmpt);
anova_out = car::Anova(tbl,type=3);
r2_out = r.squaredGLMM(tbl);
R2m = r2_out[1] # input your R2
f2m = R2m/(1 - R2m)
R2c = r2_out[2] # input your R2
f2c = R2c/(1 - R2c)
print("ML COV")
tbl
anova_out
bfc
pwc
# print(tbl)
# print(anova_out)
# print(bfc)
# print(pwc)
print(str_glue("f2m: {round(f2m,4)},\tf2c: {round(f2c,4)}\n\n"))
library(gtsummary)
library(lme4)
library(nlme)
library(emmeans)
#%% REMOVE NANS EEG
ci = cl_inds_plot[1];
gi = group_inds_plot[2];
eegi = 1;
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt_o[[eeg_measures[ki]]]),]
}
tmpt_c <- filter_at(tmpt_o,vars('cluster_id'), any_vars(. %in% c(clusters[ci])))
tmpt <- filter_at(tmpt_c,vars('group_char'), any_vars(. %in% c(groups[gi])))
tbl = lmer(str_glue("{eeg_measures[eegi]} ~ 1 + speed_cond_num + (1|subj_char)"), data=tmpt);
anova_out = car::Anova(tbl,type=3);
r2_out = r.squaredGLMM(tbl);
R2m = r2_out[1] # input your R2
f2m = R2m/(1 - R2m)
R2c = r2_out[2] # input your R2
f2c = R2c/(1 - R2c)
print("ML COV")
tbl
anova_out
bfc
pwc
# print(tbl)
# print(anova_out)
# print(bfc)
# print(pwc)
print(str_glue("f2m: {round(f2m,4)},\tf2c: {round(f2c,4)}\n\n"))
ci
gi
ci
clusters
ci = cl_inds_plot[1];
gi = group_inds_plot[2];
eegi = 1;
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt_o[[eeg_measures[ki]]]),]
}
tmpt_c <- filter_at(tmpt_o,vars('cluster_id'), any_vars(. %in% c(clusters[ci])))
tmpt <- filter_at(tmpt_c,vars('group_char'), any_vars(. %in% c(groups[gi])))
tbl = lmer(str_glue("{eeg_measures[eegi]} ~ 1 + speed_cond_num + (1|subj_char)"), data=tmpt);
anova_out = car::Anova(tbl,type=3);
r2_out = r.squaredGLMM(tbl);
R2m = r2_out[1] # input your R2
f2m = R2m/(1 - R2m)
R2c = r2_out[2] # input your R2
f2c = R2c/(1 - R2c)
print('str_glue{eeg_measures[eegi]}')
tbl
anova_out
# print(tbl)
# print(anova_out)
print(str_glue("f2m: {round(f2m,4)},\tf2c: {round(f2c,4)}\n\n"))
print(str_glue("f2m: {round(f2m,4)},\tf2c: {round(f2c,4)}\n\n"))
tmppred = mutate(fit.m = predict(tbl, re.form = NA),
fit.c = predict(tbl, re.form = NULL))
fit.m = predict(tbl, re.form = NA)
fit.c = predict(tbl, re.form = NULL)
tmpt %>%
ggplot(aes(x = speed_cond_num, y = .data[[eeg_measures[eegi]]], group = subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(x= speed_cond_num, y=fit.c, group = subj_char),color="grey", size = .1) +
geom_line(aes(x= speed_cond_num, y=fit.m), size = 2)+
facet_wrap(vars(group_char))+
ggtitle(eeg_measures[kini])+
guides(group="none")
eegi
View(tmpt)
ci = cl_inds_plot[1];
gi = group_inds_plot[2];
eegi = 1;
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt_o[[eeg_measures[ki]]]),]
}
tmpt_c <- filter_at(tmpt_o,vars('cluster_id'), any_vars(. %in% c(clusters[ci])))
tmpt <- filter_at(tmpt_c,vars('group_char'), any_vars(. %in% c(groups[gi])))
tbl = lmer(str_glue("{eeg_measures[eegi]} ~ 1 + speed_cond_num + (1|subj_char)"), data=tmpt);
anova_out = car::Anova(tbl,type=3);
r2_out = r.squaredGLMM(tbl);
R2m = r2_out[1] # input your R2
f2m = R2m/(1 - R2m)
R2c = r2_out[2] # input your R2
f2c = R2c/(1 - R2c)
print(str_glue('{eeg_measures[eegi]}'))
tbl
anova_out
print(str_glue("f2m: {round(f2m,4)},\tf2c: {round(f2c,4)}\n\n"))
R2c
# print(tbl)
# print(anova_out)
print(str_glue("R2m: {round(R2m,4)},\tR2c: {round(R2c,4)}\n\n"))
library(gtsummary)
library(lme4)
library(nlme)
library(emmeans)
#%% REMOVE NANS EEG
ci = cl_inds_plot(1);
library(gtsummary)
library(lme4)
library(nlme)
library(emmeans)
#%% REMOVE NANS EEG
ci = cl_inds_plot[1];
eegi = 1;
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt[[eeg_measures[ki]]]),]
}
library(gtsummary)
library(lme4)
library(nlme)
library(emmeans)
#%% REMOVE NANS EEG
ci = cl_inds_plot[1];
eegi = 1;
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt_o[[eeg_measures[ki]]]),]
}
tmpt_c <- filter_at(tmpt_o,vars('cluster_id'), any_vars(. %in% c(clusters[ci])))
tmpt = tmp_c;
library(gtsummary)
library(lme4)
library(nlme)
library(emmeans)
#%% REMOVE NANS EEG
ci = cl_inds_plot[1];
eegi = 1;
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt_o[[eeg_measures[ki]]]),]
}
tmpt_c <- filter_at(tmpt_o,vars('cluster_id'), any_vars(. %in% c(clusters[ci])))
tmpt = tmpt_c;
tbl = lmer("{eeg_measures{eegi}} ~ 1 + speed_cond_num + group_char + speed_cond_num:group_char + (1|subj_char)", data=tmpt);
library(gtsummary)
library(lme4)
library(nlme)
library(emmeans)
#%% REMOVE NANS EEG
ci = cl_inds_plot[1];
eegi = 1;
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt_o[[eeg_measures[ki]]]),]
}
tmpt_c <- filter_at(tmpt_o,vars('cluster_id'), any_vars(. %in% c(clusters[ci])))
tmpt = tmpt_c;
tbl = lmer("{eeg_measures[eegi]} ~ 1 + speed_cond_num + group_char + speed_cond_num:group_char + (1|subj_char)", data=tmpt);
library(gtsummary)
library(lme4)
library(nlme)
library(emmeans)
#%% REMOVE NANS EEG
ci = cl_inds_plot[1];
eegi = 1;
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt_o[[eeg_measures[ki]]]),]
}
tmpt_c <- filter_at(tmpt_o,vars('cluster_id'), any_vars(. %in% c(clusters[ci])))
tmpt = tmpt_c;
tbl = lmer(str_glue("{eeg_measures[eegi]} ~ 1 + speed_cond_num + group_char + speed_cond_num:group_char + (1|subj_char)"), data=tmpt);
anova_out = car::Anova(tbl,type=3);
#%% pairwise comparissons - tried lsmeans, glht. People seem to favor emmeans: https://www.researchgate.net/post/What-about-Multiple-comparisons-in-a-linear-mixed-model-in-R
# glht(tbl, mcp(group_char="Tukey"))
# lsmeans(tbl, pairwise ~ group_char)
# lsmeans(tbl, pairwise ~ speed_cond_num:group_char)
em = emmeans(tbl,"group_char")
bfc = contrast(em,adjutst="bonferroni")
pwc = contrast(em,method = "pairwise")
r2_out = r.squaredGLMM(tbl);
R2m = r2_out[1] # input your R2
f2m = R2m/(1 - R2m)
R2c = r2_out[2] # input your R2
f2c = R2c/(1 - R2c)
print(str_glue('{eeg_measures[eegi]}'))
tbl
anova_out
# print(tbl)
# print(anova_out)
print(str_glue("R2m: {round(R2m,4)},\tR2c: {round(R2c,4)}\n\n"))
print(str_glue("f2m: {round(f2m,4)},\tf2c: {round(f2c,4)}\n\n"))
fit.m = predict(tbl, re.form = NA)
fit.c = predict(tbl, re.form = NULL)
tmpt %>%
ggplot(aes(x = speed_cond_num, y = .data[[eeg_measures[eegi]]], group = subj_char, col=group_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(x= speed_cond_num, y=fit.c, group = subj_char),color="grey", size = .1) +
geom_line(aes(x= speed_cond_num, y=fit.m), size = 2,col=group_char)+
facet_wrap(vars(group_char))+
ggtitle(eeg_measures[eegi])+
guides(group="none")
tmpt %>%
ggplot(aes(x = speed_cond_num, y = .data[[eeg_measures[eegi]]], group = subj_char, col=group_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(x= speed_cond_num, y=fit.c, group = subj_char),color="grey", size = .1) +
geom_line(aes(x= speed_cond_num, y=fit.m, col = group_char), size = 2)+
facet_wrap(vars(group_char))+
ggtitle(eeg_measures[eegi])+
guides(group="none")
library(gtsummary)
library(lme4)
library(nlme)
library(emmeans)
#%% REMOVE NANS EEG
ci = cl_inds_plot[1];
eegi = 1;
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt_o[[eeg_measures[ki]]]),]
}
tmpt_c <- filter_at(tmpt_o,vars('cluster_id'), any_vars(. %in% c(clusters[ci])))
tmpt = tmpt_c;
tbl = lmer(str_glue("{eeg_measures[eegi]} ~ 1 + speed_cond_num + group_char + speed_cond_num:group_char + (1|subj_char)"), data=tmpt);
anova_out = car::Anova(tbl,type=3);
#%% pairwise comparissons - tried lsmeans, glht. People seem to favor emmeans: https://www.researchgate.net/post/What-about-Multiple-comparisons-in-a-linear-mixed-model-in-R
# glht(tbl, mcp(group_char="Tukey"))
# lsmeans(tbl, pairwise ~ group_char)
# lsmeans(tbl, pairwise ~ speed_cond_num:group_char)
em = emmeans(tbl,"group_char")
bfc = contrast(em,adjutst="bonferroni")
pwc = contrast(em,method = "pairwise")
r2_out = r.squaredGLMM(tbl);
R2m = r2_out[1] # input your R2
f2m = R2m/(1 - R2m)
R2c = r2_out[2] # input your R2
f2c = R2c/(1 - R2c)
print(str_glue('{eeg_measures[eegi]}'))
tbl
anova_out
# print(tbl)
# print(anova_out)
print(str_glue("R2m: {round(R2m,4)},\tR2c: {round(R2c,4)}\n\n"))
print(str_glue("f2m: {round(f2m,4)},\tf2c: {round(f2c,4)}\n\n"))
fit.m = predict(tbl, re.form = NA)
fit.c = predict(tbl, re.form = NULL)
tmpt %>%
ggplot(aes(x = speed_cond_num, y = .data[[eeg_measures[eegi]]], group = subj_char, col=group_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(x= speed_cond_num, y=fit.c, group = subj_char),color="grey", size = .1) +
geom_line(aes(x= speed_cond_num, y=fit.m, col = group_char), size = 2)+
facet_wrap(vars(group_char))+
ggtitle(eeg_measures[eegi])+
guides(group="none")
library(gtsummary)
library(lme4)
library(nlme)
library(emmeans)
#%% REMOVE NANS EEG
ci = cl_inds_plot[1];
eegi = 1;
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt_o[[eeg_measures[ki]]]),]
}
tmpt_c <- filter_at(tmpt_o,vars('cluster_id'), any_vars(. %in% c(clusters[ci])))
tmpt = tmpt_c;
# tbl = lmer(str_glue("{eeg_measures[eegi]} ~ 1 + speed_cond_num + group_char + speed_cond_num:group_char + (1|subj_char)"), data=tmpt);
tbl = lmer(str_glue("{eeg_measures[eegi]} ~ 1 + speed_cond_num + group_char + (1|subj_char)"), data=tmpt);
anova_out = car::Anova(tbl,type=3);
#%% pairwise comparissons - tried lsmeans, glht. People seem to favor emmeans: https://www.researchgate.net/post/What-about-Multiple-comparisons-in-a-linear-mixed-model-in-R
# glht(tbl, mcp(group_char="Tukey"))
# lsmeans(tbl, pairwise ~ group_char)
# lsmeans(tbl, pairwise ~ speed_cond_num:group_char)
em = emmeans(tbl,"group_char")
bfc = contrast(em,adjutst="bonferroni")
pwc = contrast(em,method = "pairwise")
r2_out = r.squaredGLMM(tbl);
R2m = r2_out[1] # input your R2
f2m = R2m/(1 - R2m)
R2c = r2_out[2] # input your R2
f2c = R2c/(1 - R2c)
print(str_glue('{eeg_measures[eegi]}'))
tbl
anova_out
# print(tbl)
# print(anova_out)
print(str_glue("R2m: {round(R2m,4)},\tR2c: {round(R2c,4)}\n\n"))
print(str_glue("f2m: {round(f2m,4)},\tf2c: {round(f2c,4)}\n\n"))
fit.m = predict(tbl, re.form = NA)
fit.c = predict(tbl, re.form = NULL)
tmpt %>%
ggplot(aes(x = speed_cond_num, y = .data[[eeg_measures[eegi]]], group = subj_char, col=group_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(x= speed_cond_num, y=fit.c, group = subj_char),color="grey", size = .1) +
geom_line(aes(x= speed_cond_num, y=fit.m, col = group_char), size = 2)+
facet_wrap(vars(group_char))+
ggtitle(eeg_measures[eegi])+
guides(group="none")
tmpt = ls_t
for(ki in ls_inds_plot){
tmpt = tmpt[complete.cases(tmpt[[ls_measures[ki]]]),]
}
tbl = lmer("mean_StepDur_cov ~ 1 + speed_cond_num + group_char + (1|subj_char)", data=tmpt);
anova_out = car::Anova(tbl,type=3);
summary(tbl)$r.squared
tbl
tbl$r.squared
tbl = lmer("mean_StepDur_cov ~ 1 + speed_cond_num + group_char + (1|subj_char)", data=tmpt);
library(gtsummary)
library(lme4)
library(nlme)
library(emmeans)
# library(multcomp)
# library(lsmeans)
# library(pwr)
# library(easystats)
#%% REMOVE NANS IMU
tmpt = imu_t
for(ki in imu_inds_plot){
tmpt = tmpt[complete.cases(tmpt[[imu_measures[ki]]]),]
}
tmpt$group_char <- relevel(tmpt$group_char,ref="2")
#%% ML COV
tbl = lmer("mean_MLexc_COV ~ 1 + speed_cond_num + group_char + speed_cond_num:group_char + (1|subj_char)", data=tmpt);
tblalt = lmer("mean_MLexc_COV ~ 1 + (1|subj_char)", data=tmpt);
anova_out = car::Anova(tbl,type=3);
#%% pairwise comparissons - tried lsmeans, glht. People seem to favor emmeans: https://www.researchgate.net/post/What-about-Multiple-comparisons-in-a-linear-mixed-model-in-R
# glht(tbl, mcp(group_char="Tukey"))
# lsmeans(tbl, pairwise ~ group_char)
# lsmeans(tbl, pairwise ~ speed_cond_num:group_char)
em = emmeans(tbl,"group_char")
bfc = contrast(em,adjutst="bonferroni")
pwc = contrast(em,method = "pairwise")
r2_out = r.squaredGLMM(tbl);
r2_outalt = r.squaredGLMM(tblalt);
R2m = r2_out[1] # input your R2
f2m = R2m/(1 - R2m)
R2c = r2_out[2] # input your R2
f2c = R2c/(1 - R2c)
f2m = (r2_out[1]-r2_outalt[1])/(1-r2_out[1]);
f2c = (r2_out[2]-r2_outalt[2])/(1-r2_out[2]);
print("ML COV")
tbl
anova_out
bfc
pwc
# print(tbl)
# print(anova_out)
# print(bfc)
# print(pwc)
print(str_glue("f2m: {round(f2m,4)},\tf2c: {round(f2c,4)}\n\n"))
#%% AP COV
tbl = lmer("mean_APexc_COV ~ 1 + speed_cond_num + group_char + (1|subj_char)", data=tmpt);
tblalt = lmer("mean_APexc_COV ~ 1 + (1|subj_char)", data=tmpt);
anova_out = car::Anova(tbl,type=3);
em = emmeans(tbl,"group_char")
bfc = contrast(em,adjutst="bonferroni")
pwc = contrast(em,method = "pairwise")
r2_out = r.squaredGLMM(tbl);
r2_outalt = r.squaredGLMM(tblalt);
R2m = r2_out[1] # input your R2
f2m = R2m/(1 - R2m)
R2c = r2_out[2] # input your R2
f2c = R2c/(1 - R2c)
f2m = (r2_out[1]-r2_outalt[1])/(1-r2_out[1]);
f2c = (r2_out[2]-r2_outalt[2])/(1-r2_out[2]);
print("AP COV")
tbl
anova_out
bfc
pwc
# print(tbl)
# print(anova_out)
# print(bfc)
# print(pwc)
print(str_glue("f2m: {round(f2m,4)},\tf2c: {round(f2c,4)}\n\n"))
R2c/(1 - R2c)
(r2_out[2]-r2_outalt[2])/(1-r2_out[2])
(r2_out[1]-r2_outalt[1])/(1-r2_out[1])
R2m/(1 - R2m)
f2c
library(gtsummary)
# inter_pvalue = vector(mode="logical");
tmpt_o = eeg_t
for(ki in eeg_inds_plot){
tmpt_o = tmpt_o[complete.cases(tmpt_o[[eeg_measures[ki]]]),]
}
for (ci in cl_inds_plot) {
tmpt_c <- filter_at(tmpt_o,vars('cluster_id'), any_vars(. %in% c(clusters[ci])))
for (gi in group_inds_plot) {
tmpt <- filter_at(tmpt_c,vars('group_char'), any_vars(. %in% c(groups[gi])))
tbl <- tibble(outcome=eeg_measures[eeg_inds_plot]) %>%
rowwise() %>%
mutate(
tbl =
lmer(str_glue("{outcome} ~ 1 + speed_cond_num + (1|subj_char)"), data=tmpt) %>%
tbl_regression(tidy_fun = broom.mixed::tidy,
pvalue_fun = purrr::partial(style_pvalue, digits = 3),
intercept=TRUE) %>%
add_global_p() %>%
add_q() %>%
list()
) %>%
pull(tbl) %>%
tbl_merge(tab_spanner=eeg_title_chars[eeg_inds_plot])
t_out <- as_gt(tbl) %>%
gt::tab_header(title=c("CL",clusters[ci],"eeg ~ 1 + speed + (1|subj_char)")) %>%
gt::as_raw_html()
print(t_out)
rsq <- tibble(outcome=eeg_measures[eeg_inds_plot]) %>%
rowwise() %>%
mutate(
mod =
lmer(str_glue("{outcome} ~ 1 + speed_cond_num + (1|subj_char)"), data=tmpt) %>%
r.squaredGLMM(),
print(str_glue("{outcome}\n R2m: {round(mod[1],4)},\tR2c: {round(mod[2],4)}\n\n"))
)
#%% VISUALIZATION OF MODELS
theme_set(theme_classic()) # This sets the default ggplot theme
fitfit <- tibble(outcome=eeg_measures[eeg_inds_plot]) %>%
rowwise() %>%
mutate(
mod =
lmer(str_glue("{outcome} ~ 1 + speed_cond_num + (1|subj_char)"), data=tmpt)%>%
list()
)
for(modi in 1:length(eeg_measures[eeg_inds_plot])){
kini = eeg_inds_plot[modi]
tmpt <- tmpt %>%
mutate(fit.m = predict(fitfit$mod[[modi]], re.form = NA),
fit.c = predict(fitfit$mod[[modi]], re.form = NULL))
print(plot_model(fitfit$mod[[modi]], type = 'diag'))
print(
tmpt %>%
ggplot(aes(x = speed_cond_num, y = .data[[eeg_measures[kini]]], group = subj_char, col=group_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(x= speed_cond_num, y=fit.c, group = subj_char),color="grey", size = .1) +
geom_line(aes(x= speed_cond_num, y=fit.m, col = group_char), size = 2)+
facet_wrap(vars(group_char))+
ggtitle(eeg_measures[kini])+
guides(group="none")
)
}
}
}
