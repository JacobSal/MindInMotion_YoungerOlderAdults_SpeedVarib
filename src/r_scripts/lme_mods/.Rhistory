scale = 1,
width = 3,
height = 3,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL,
create.dir = TRUE
)
ggsave(
sprintf("cl%i_kin%s_med_1_speedp_kinr.png",ci,kin_measures[kini]),
plot = last_plot(),
device = NULL,
path = "/figs",
scale = 1,
width = 3,
height = 3,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL,
create.dir = TRUE
)
print(
tmpt %>%
ggplot(aes(x=speed_cond_num, y = .data[[kin_measures[kini]]], col=.data[[kin_measures[kini]]], group = subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c, group = subj_char),color="grey", linewidth = .1) +
geom_line(aes(y=fit.m), linewidth = 2)+
ggtitle(kin_measures[kini])+
guides(group="none")
)
ggsave(
sprintf("cl%i_kin%s_med_1_speedp_kinr.png",ci,kin_measures[kini]),
plot = last_plot(),
device = NULL,
path = "./figs",
scale = 1,
width = 3,
height = 3,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL,
create.dir = TRUE
)
theme_set(theme_classic()) # This sets the default ggplot theme
fitfit <- tibble(outcome=kin_measures[kin_inds_plot]) %>%
rowwise() %>%
mutate(
mod =
lmer(str_glue("{outcome} ~ 1 + speed_cond_num + (1|subj_char)"), data=tmpt) %>%
list()
)
kini = kin_inds_plot[modi]
tmpt <- tmpt %>%
mutate(fit.m = predict(fitfit$mod[[modi]], re.form = NA),
fit.c = predict(fitfit$mod[[modi]], re.form = NULL));
print(plot_model(fitfit$mod[[modi]], type = 'diag'))
print(
tmpt %>%
ggplot(aes(x=speed_cond_num, y = .data[[kin_measures[kini]]], col=.data[[kin_measures[kini]]], group = subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c, group = subj_char),color="grey", linewidth = .1) +
geom_line(aes(y=fit.m), linewidth = 2)+
ggtitle(kin_measures[kini])+
guides(group="none")
)
ggsave(
sprintf("cl%i_kin%s_med_1_speedp_kinr.png",ci,kin_measures[kini]),
plot = last_plot(),
device = NULL,
path = "./figs",
scale = 1,
width = 3,
height = 3,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL,
create.dir = TRUE
)
print(
fig <- tmpt %>%
ggplot(aes(x=speed_cond_num, y = .data[[kin_measures[kini]]], col=.data[[kin_measures[kini]]], group = subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c, group = subj_char),color="grey", linewidth = .1) +
geom_line(aes(y=fit.m), linewidth = 2)+
ggtitle(kin_measures[kini])+
guides(group="none")
)
ggsave(
sprintf("cl%i_kin%s_med_1_speedp_kinr.png",ci,kin_measures[kini]),
plot = last_plot(),
device = NULL,
path = "./figs",
scale = 1,
width = 3,
height = 3,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL,
create.dir = TRUE
)
print(
fig <- tmpt %>%
ggplot(aes(x=speed_cond_num, y = .data[[kin_measures[kini]]], col=.data[[kin_measures[kini]]], group = subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c, group = subj_char),color="grey", linewidth = .1) +
geom_line(aes(y=fit.m), linewidth = 2)+
ggtitle(kin_measures[kini])+
guides(group="none")
)
ggsave(
sprintf("cl%i_kin%s_med_1_speedp_kinr.png",ci,kin_measures[kini]),
plot = fig,
device = NULL,
path = "./figs",
scale = 1,
width = 3,
height = 3,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL,
create.dir = TRUE
)
getwd()
ggsave(
sprintf("cl%i_kin%s_med_1_speedp_kinr.png",ci,kin_measures[kini]),
plot = fig,
device = NULL,
path = sprintf("%s/figs",getwd()),
scale = 1,
width = 3,
height = 3,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL,
create.dir = TRUE
)
sprintf("%s/figs",getwd())
sprintf("cl%i_kin%s_med_1_speedp_kinr.png",ci,kin_measures[kini])
mkdir(sprintf("%s/figs",getwd()))
dir.create(sprintf("%s/figs",getwd()))
ggsave(
sprintf("med_1_cl%i_kin-%s-speedp_kinr.png",ci,kin_measures[kini]),
plot = fig,
device = NULL,
path = sprintf("%s/figs",getwd()),
scale = 1,
width = 3,
height = 3,
units = c("in"),
dpi = 300,
limitsize = TRUE,
bg = NULL,
create.dir = TRUE
)
tmpt <- filter_at(eegt,vars('cluster_id'), any_vars(. %in% clusters[ci]));
for(ki in kin_inds_plot){
tmpt = tmpt[complete.cases(tmpt[[kin_measures[ki]]]),]
}
theme_set(theme_classic()) # This sets the default ggplot theme
fitfit <- tibble(outcome=eeg_measures[eeg_inds_plot]) %>%
rowwise() %>%
mutate(
mod =
lmer(str_glue(paste("{outcome} ~ 1 + speed_cond_num + ",kin_measures[mi]," + (1|subj_char)")), data=tmpt) %>%
list()
)
print(
fig<-tmpt %>%
ggplot(aes(x = .data[[kin_measures[mi]]], y = .data[[eeg_measures[eegi]]], group = subj_char, col=speed_ord)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(x= .data[[kin_measures[mi]]], y=fit.c, group = subj_char),color="grey", size = .1) +
geom_line(aes(x= .data[[kin_measures[mi]]], y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
eegi = eeg_inds_plot[modi]
tmpt <- tmpt %>%
mutate(fit.m = predict(fitfit$mod[[modi]], re.form = NA),
fit.c = predict(fitfit$mod[[modi]], re.form = NULL))
print(plot_model(fitfit$mod[[modi]], type = 'diag'))
print(
fig<-tmpt %>%
ggplot(aes(x = .data[[kin_measures[mi]]], y = .data[[eeg_measures[eegi]]], group = subj_char, col=speed_ord)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(x= .data[[kin_measures[mi]]], y=fit.c, group = subj_char),color="grey", size = .1) +
geom_line(aes(x= .data[[kin_measures[mi]]], y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
pdata <- tmpt[order(tmpt(tmpt$speed_cond_num, decreasing = FALSE))];
pdata <- tmpt[order(tmpt(tmpt$speed_cond_num, decreasing = FALSE))];
pdata <- tmpt[order(tmpt$speed_cond_num, decreasing = FALSE)];
pdata <- tmpt[order(tmpt$speed_cond_num, decreasing = FALSE),];
print(
fig<-pdata %>%
ggplot(aes(x = .data[[kin_measures[mi]]], y = .data[[eeg_measures[eegi]]], group = subj_char, col=speed_ord)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(x= .data[[kin_measures[mi]]], y=fit.c, group = subj_char),color="grey", size = .1) +
geom_line(aes(x= .data[[kin_measures[mi]]], y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
tmpt <- tmpt[tmpt$speed_cond_num == 0.25,];
print(
fig<-tmpt %>%
ggplot(aes(x = .data[[kin_measures[mi]]], y = .data[[eeg_measures[eegi]]], group = subj_char, col=speed_ord)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(x= .data[[kin_measures[mi]]], y=fit.c, group = subj_char),color="grey", size = .1) +
geom_line(aes(x= .data[[kin_measures[mi]]], y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
y=fit.m
tmpt$fit.m
print(
fig<-tmpt %>%
ggplot(aes(x = .data[[kin_measures[mi]]], y = .data[[eeg_measures[eegi]]], group = subj_char, col=speed_ord)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(x= .data[[kin_measures[mi]]], y=fit.c, group = subj_char),color="grey", size = .1) +
geom_line(aes(x= .data[[kin_measures[mi]]], y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
print(
fig<-tmpt %>%
ggplot(aes(x = .data[[kin_measures[mi]]], y = .data[[eeg_measures[eegi]]], group = subj_char, col=speed_ord)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c, group=subj_char),color="grey", size = .1) +
geom_line(aes(y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
fig<- ggplot(data=tmpt, aes(x = .data[[kin_measures[mi]]], y = .data[[eeg_measures[eegi]]], group = subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(data=tmpt, aes(y=fit.c, group=subj_char),color="grey", size = .1) +
geom_line(data=tmpt, aes(y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
fig<- ggplot(data=tmpt, aes(x = .data[[kin_measures[mi]]], y = .data[[eeg_measures[eegi]]], group = subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(data=tmpt, aes(y=fit.c, group=subj_char),color="grey", size = .1) +
geom_line(data=tmpt, aes(y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
print(
fig<- ggplot(data=tmpt, aes(x = .data[[kin_measures[mi]]], y = .data[[eeg_measures[eegi]]], group = subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(data=tmpt, aes(y=fit.c, group=subj_char),color="grey", size = .1) +
geom_line(data=tmpt, aes(y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
print(
fig<- ggplot(data=tmpt, aes(x = .data[[kin_measures[mi]]], y = .data[[eeg_measures[eegi]]], group = subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(data=tmpt, aes(x = .data[[kin_measures[mi]]],y=fit.c, group=subj_char),color="grey", size = .1) +
geom_line(data=tmpt, aes(x = .data[[kin_measures[mi]]],y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
print(
fig<- ggplot(data=tmpt, aes(x = .data[[kin_measures[mi]]], y = .data[[eeg_measures[eegi]]])) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(data=tmpt, aes(x = .data[[kin_measures[mi]]],y=fit.c),color="grey", size = .1) +
geom_line(data=tmpt, aes(x = .data[[kin_measures[mi]]],y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
print(
fig<- ggplot(data=tmpt, aes(x =.data[[kin_measures[mi]]], y=.data[[eeg_measures[eegi]]], col=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(data=tmpt, aes(x = .data[[kin_measures[mi]]], y=fit.c, col=subj_char),color="grey", size = .1) +
geom_line(data=tmpt, aes(x = .data[[kin_measures[mi]]], y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
print(
fig<- ggplot(data=tmpt, aes(x =.data[[kin_measures[mi]]], y=.data[[eeg_measures[eegi]]], group=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(data=tmpt, aes(x = .data[[kin_measures[mi]]], y=fit.c, group=subj_char),color="grey", size = .1) +
geom_line(data=tmpt, aes(x = .data[[kin_measures[mi]]], y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
print(
fig<- ggplot(data=tmpt, aes(x =speed_cond_num, y=.data[[eeg_measures[eegi]]], col = .data[[kin_measures[mi]]], group=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(data=tmpt, aes(x = speed_cond_num, y=fit.c, col = .data[[kin_measures[mi]]], group=subj_char),color="grey", size = .1) +
geom_line(data=tmpt, aes(x = speed_cond_num, y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
tmpt <- filter_at(eegt,vars('cluster_id'), any_vars(. %in% clusters[ci]));
for(ki in kin_inds_plot){
tmpt = tmpt[complete.cases(tmpt[[kin_measures[ki]]]),]
}
print(
fig<- ggplot(data=tmpt, aes(x =speed_cond_num, y=.data[[eeg_measures[eegi]]], col = .data[[kin_measures[mi]]], group=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(data=tmpt, aes(x = speed_cond_num, y=fit.c, col = .data[[kin_measures[mi]]], group=subj_char),color="grey", size = .1) +
geom_line(data=tmpt, aes(x = speed_cond_num, y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
eegi = eeg_inds_plot[modi]
tmpt <- tmpt %>%
mutate(fit.m = predict(fitfit$mod[[modi]], re.form = NA),
fit.c = predict(fitfit$mod[[modi]], re.form = NULL))
print(
fig<- ggplot(data=tmpt, aes(x =speed_cond_num, y=.data[[eeg_measures[eegi]]], col = .data[[kin_measures[mi]]], group=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(data=tmpt, aes(x = speed_cond_num, y=fit.c, col = .data[[kin_measures[mi]]], group=subj_char),color="grey", size = .1) +
geom_line(data=tmpt, aes(x = speed_cond_num, y=fit.m),alpha=0.75, size = 2)+
ggtitle(eeg_measures[eegi])+
guides(group="none")
)
kin_measures
# ERROR. png() device not found bug try: dev.off()
# ERROR. png() device not found fixed by changing cell names to a simple "windows friendlY" format so that knitr could save files.
knitr::opts_chunk$set(echo = TRUE)
# mediation a)
tbl <- lmer(str_glue(paste("mean_StanceDur ~ 1 + mean_MLexc_COV + (1|subj_char)")), data=tmpt) %>%
tbl_regression(tidy_fun = broom.mixed::tidy,
pvalue_fun = purrr::partial(style_pvalue, digits = 2),
intercept=TRUE) %>%
add_global_p() %>%
add_q() %>%
list() %>%
pull(tbl) %>%
tbl_merge(tab_spanner=eeg_title_chars[eeg_inds_plot])
ci = 2;
tmpt <- filter_at(eegt,vars('cluster_id'), any_vars(. %in% clusters[ci]));
for(ki in kin_inds_plot){
tmpt = tmpt[complete.cases(tmpt[[kin_measures[ki]]]),]
}
# mediation a)
tbl <- lmer(str_glue(paste("mean_StanceDur ~ 1 + mean_MLexc_COV + (1|subj_char)")), data=tmpt) %>%
tbl_regression(tidy_fun = broom.mixed::tidy,
pvalue_fun = purrr::partial(style_pvalue, digits = 2),
intercept=TRUE) %>%
add_global_p() %>%
add_q() %>%
list() %>%
tbl_merge(tab_spanner=eeg_title_chars[eeg_inds_plot])
# mediation a)
tbl <- lmer(str_glue(paste("mean_StanceDur ~ 1 + mean_MLexc_COV + (1|subj_char)")), data=tmpt) %>%
tbl_regression(tidy_fun = broom.mixed::tidy,
pvalue_fun = purrr::partial(style_pvalue, digits = 2),
intercept=TRUE) %>%
add_global_p() %>%
add_q() %>%
list() %>%
tbl_merge(tab_spanner='mean_MLExc_COV')
ci = 2;
tmpt <- filter_at(eegt,vars('cluster_id'), any_vars(. %in% clusters[ci]));
for(ki in kin_inds_plot){
tmpt = tmpt[complete.cases(tmpt[[kin_measures[ki]]]),]
}
# mediation a)
tbl <- lmer(str_glue(paste("mean_StanceDur ~ 1 + mean_MLexc_COV + (1|subj_char)")), data=tmpt) %>%
tbl_regression(tidy_fun = broom.mixed::tidy,
pvalue_fun = purrr::partial(style_pvalue, digits = 2),
intercept=TRUE) %>%
add_global_p() %>%
add_q() %>%
list() %>%
tbl_merge(tab_spanner='mean_MLExc_COV')
t_out <- as_gt(tbl) %>%
gt::tab_header(title=c("Changes in mean_MLexc_COV for Cluster: ",clusters[ci])) %>%
gt::tab_options(table.layout = "fixed") %>%
gt::as_raw_html()
print(t_out)
rsq <- lmer(str_glue(paste("mean_StanceDur ~ 1 + mean_MLexc_COV + (1|subj_char)")), data=tmpt)  %>%
r.squaredGLMM()
print(str_glue("mean_StanceDur\n R2m: {round(rsq[1],4)},\tR2c: {round(rsq[2],4)}\n\n"))
#%% VISUALIZATION OF MODELS
theme_set(theme_classic()) # This sets the default ggplot theme
fitfit <- lmer(str_glue(paste("mean_StanceDur ~ 1 + mean_MLexc_COV + (1|subj_char)")), data=tmpt) %>%
list()
tmpt <- tmpt %>%
mutate(fit.m = predict(fitfit$mod[[1]], re.form = NA),
fit.c = predict(fitfit$mod[[1]], re.form = NULL))
tmpt
fitfit
fitfit$mod[[1]]
fitfit$mod
fitfit
tmpt <- tmpt %>%
mutate(fit.m = predict(fitfit, re.form = NA),
fit.c = predict(fitfit, re.form = NULL))
fitfit[1]
fitfit[[1]]
tmpt <- tmpt %>%
mutate(fit.m = predict(fitfit[[1]], re.form = NA),
fit.c = predict(fitfit[[1]], re.form = NULL))
print(plot_model(fitfit[[1]], type = 'diag'))
print(
tmpt %>%
ggplot(aes(x = mean_MLexc_COV, y = mean_StanceDur, col=speed_cond_num, group=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c, col = (speed_cond_num), group=subj_char),color="grey", size = .1) +
geom_line(aes(y=fit.m,  col = (speed_cond_num), group=subj_char), size = 2) +
facet_wrap(~speed_cond_num)+
ggtitle(eeg_measures[eegi])
)
print(
tmpt %>%
ggplot(aes(x = mean_MLexc_COV, y = mean_StanceDur, col=speed_cond_num, group=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c, col = (speed_cond_num), group=subj_char),color="grey", size = .1) +
geom_line(aes(y=fit.m,  col = (speed_cond_num), group=subj_char), size = 2) +
ggtitle(eeg_measures[eegi])
)
tmpt %>%
ggplot(aes(x = mean_MLexc_COV, y = mean_StanceDur, col=speed_cond_num, group=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c, col = (speed_cond_num), group=subj_char),color="grey", size = .1) +
geom_line(aes(y=fit.m,  col = (speed_cond_num)), size = 2) +
ggtitle(eeg_measures[eegi])
tmpt %>%
ggplot(aes(x = mean_MLexc_COV, y = mean_StanceDur, col=speed_cond_num, group=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c , group=subj_char),color="grey", size = .1)
tmpt %>%
ggplot(aes(x = mean_MLexc_COV, y = mean_StanceDur, group=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c , group=subj_char),color="grey", size = .1)
tmpt %>%
ggplot(aes(x = mean_MLexc_COV, y = mean_StanceDur, col=speed_cond_num, group=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c , group=subj_char),color="grey", size = .1) +
geom_line(aes(y=fit.m), size = 2) +
ggtitle(eeg_measures[eegi])
# mediation b)
tbl <- tibble(outcome=eeg_measures[eeg_inds_plot]) %>%
rowwise() %>%
mutate(
tbl =
lmer(str_glue(paste("{outcome} ~ 1 + mean_MLexc_COV + (1|subj_char)")), data=tmpt) %>%
tbl_regression(tidy_fun = broom.mixed::tidy,
pvalue_fun = purrr::partial(style_pvalue, digits = 2),
intercept=TRUE) %>%
add_global_p() %>%
add_q() %>%
list()
) %>%
pull(tbl) %>%
tbl_merge(tab_spanner=eeg_title_chars[eeg_inds_plot])
t_out <- as_gt(tbl) %>%
gt::tab_header(title=c("Changes in mean_MLexc_COV for Cluster: ",clusters[ci])) %>%
gt::tab_options(table.layout = "fixed") %>%
gt::as_raw_html()
print(t_out)
rsq <- tibble(outcome=eeg_measures[eeg_inds_plot]) %>%
rowwise() %>%
mutate(
mod =
lmer(str_glue(paste("{outcome} ~ 1 + mean_MLexc_COV + (1|subj_char)")), data=tmpt)  %>%
r.squaredGLMM(),
print(str_glue("{outcome}\n R2m: {round(mod[1],4)},\tR2c: {round(mod[2],4)}\n\n"))
)
#%% VISUALIZATION OF MODELS
theme_set(theme_classic()) # This sets the default ggplot theme
fitfit <- tibble(outcome=eeg_measures[eeg_inds_plot]) %>%
rowwise() %>%
mutate(
mod =
lmer(str_glue(paste("{outcome} ~ 1 + mean_MLexc_COV + (1|subj_char)")), data=tmpt) %>%
list()
)
for(modi in 1:length(eeg_measures[eeg_inds_plot])){
eegi = eeg_inds_plot[modi]
tmpt <- tmpt %>%
mutate(fit.m = predict(fitfit$mod[[modi]], re.form = NA),
fit.c = predict(fitfit$mod[[modi]], re.form = NULL))
print(plot_model(fitfit$mod[[modi]], type = 'diag'))
print(
tmpt %>%
ggplot(aes(x = mean_MLexc_COV, y = .data[[eeg_measures[eegi]]], col=speed_cond_num, group=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c, group=subj_char),color="grey", size = .1) +
geom_line(aes(y=fit.m,  col = (speed_cond_num), group=subj_char), size = 2) +
facet_wrap(~speed_cond_num)+
ggtitle(eeg_measures[eegi])
)
}
print(
tmpt %>%
ggplot(aes(x = mean_MLexc_COV, y = .data[[eeg_measures[eegi]]], col=speed_cond_num, group=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c, group=subj_char),color="grey", size = .1) +
geom_line(aes(y=fit.m,col=(speed_cond_num)), size = 2) +
ggtitle(eeg_measures[eegi])
)
eegi = 1
print(
tmpt %>%
ggplot(aes(x = mean_MLexc_COV, y = .data[[eeg_measures[eegi]]], col=speed_cond_num, group=subj_char)) +
geom_point(pch=16, size=2, alpha=0.5) +
geom_line(aes(y=fit.c, group=subj_char),color="grey", size = .1) +
geom_line(aes(y=fit.m,col=(speed_cond_num)), size = 2) +
ggtitle(eeg_measures[eegi])
)
gc()
gc()
